{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/address-book/src/components/EditUser/EditUser.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory, useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport \"../../components/EditUser/editUser.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUser = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const [people, setPeople] = useState({});\n  const [isPending, setIsPending] = useState(false);\n  let [name, setName] = useState(\"\");\n  let [dob, setDob] = useState(\"\");\n  let [contactNo, setContactNo] = useState(\"\");\n  let [emailId, setEmailId] = useState(\"\");\n  let [address, setAddress] = useState(\"\");\n  let [facebookUrl, setFacebookUrl] = useState(\"\");\n  let [linkedInUrl, setLinkedInUrl] = useState(\"\");\n  let [twitterUrl, setTwitterUrl] = useState(\"\");\n  let [university, setUniversity] = useState(\"\");\n  let [startYear, setStartYear] = useState(\"\");\n  let [endYear, setEndYear] = useState(\"\");\n  let [degree, setDegree] = useState(\"\");\n  let [institution, setInstitution] = useState(\"\");\n  let [workStartYear, setWorkStartYear] = useState(\"\");\n  let [workEndYear, setWorkEndYear] = useState(\"\");\n  let [title, setTitle] = useState(\"\");\n  let [education, setEducation] = useState([]);\n  let [workExperience, setExperience] = useState([]);\n  const [nameErr, setNameErr] = useState({});\n  const [contactNoErr, setContactNoErr] = useState({});\n  const [emailIdErr, setEmailIdErr] = useState({});\n  const [addressErr, setAddressErr] = useState({});\n  const [universityErr, setUniversityErr] = useState({});\n  const [degreeErr, setDegreeErr] = useState({});\n  const [institutionErr, setInstitutionErr] = useState({});\n  const [titleErr, setTitleErr] = useState({});\n  const [yearErr, setYearErr] = useState({});\n  const history = useHistory();\n  useEffect(() => {\n    async function fetchData() {\n      await fetch('http://localhost:8080/people/' + userId).then(res => res.json()).then(data => {\n        setPeople(data);\n        setName(data.name);\n        setDob(data.dob);\n        setContactNo(data.contactNo);\n        setEmailId(data.emailId);\n        setAddress(data.address);\n        setFacebookUrl(data.facebookUrl);\n        setLinkedInUrl(data.linkedInUrl);\n        setTwitterUrl(data.twitterUrl);\n        setUniversity(data.education[0].institution);\n        setStartYear(data.education[0].startYear);\n        setEndYear(data.education[0].endYear);\n        setDegree(data.education[0].degree);\n        setInstitution(data.workExperience[0].institution);\n        setWorkStartYear(data.workExperience[0].startYear);\n        setWorkEndYear(data.workExperience[0].endYear);\n        setTitle(data.workExperience[0].title);\n      });\n    }\n\n    fetchData();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      nameErr,\n      contactNoErr,\n      emailIdErr,\n      addressErr,\n      universityErr,\n      degreeErr,\n      institutionErr,\n      titleErr,\n      yearErr,\n      isValid\n    } = formValidation(name, contactNo, emailId, address, university, degree, startYear, endYear, institution, workStartYear, workEndYear, title);\n\n    if (!isValid) {\n      setNameErr(nameErr);\n      setContactNoErr(contactNoErr);\n      setEmailIdErr(emailIdErr);\n      setAddressErr(addressErr);\n      setUniversityErr(universityErr);\n      setDegreeErr(degreeErr);\n      setInstitutionErr(institutionErr);\n      setTitleErr(titleErr);\n      setYearErr(yearErr);\n    }\n\n    if (isValid) {\n      let tempEducation = education;\n      tempEducation.push({\n        institution: university,\n        startYear,\n        endYear,\n        degree\n      });\n      let tempExperience = workExperience;\n      tempExperience.push({\n        institution,\n        startYear: workStartYear,\n        endYear: workEndYear,\n        title\n      });\n      setEducation(tempEducation);\n      setExperience(tempExperience);\n      const user = {\n        name,\n        dob,\n        contactNo,\n        emailId,\n        address,\n        facebookUrl,\n        linkedInUrl,\n        twitterUrl,\n        education,\n        workExperience\n      };\n      setIsPending(true);\n      fetch('http://localhost:8080/people/' + userId, {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(() => {\n        setIsPending(false);\n        history.push('/');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date Of Birth:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: dob,\n        onChange: e => setDob(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contact Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: contactNo,\n        onChange: e => setContactNo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        value: emailId,\n        onChange: e => setEmailId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Social Media Profile:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Facebook:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        value: facebookUrl,\n        onChange: e => setFacebookUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"LinkedIn:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        value: linkedInUrl,\n        onChange: e => setLinkedInUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Twitter:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        value: twitterUrl,\n        onChange: e => setTwitterUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Education:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"University:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: university,\n        onChange: e => setUniversity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"YYYY\",\n        min: \"1950\",\n        max: \"2021\",\n        required: true,\n        value: startYear,\n        onChange: e => setStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"YYYY or Present\",\n        required: true,\n        value: endYear,\n        onChange: e => setEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Degree:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: degree,\n        onChange: e => setDegree(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Institution:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: institution,\n        onChange: e => setInstitution(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"YYYY\",\n        min: \"1950\",\n        max: \"2021\",\n        required: true,\n        value: workStartYear,\n        onChange: e => setWorkStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"YYYY or Present\",\n        required: true,\n        value: workEndYear,\n        onChange: e => setWorkEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-edit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 33\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-edit\",\n        disabled: true,\n        children: \"Saving...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditUser, \"4Ycfuf7Q4O33cZoL6PCn1jlRnXs=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditUser;\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/components/EditUser/EditUser.js"],"names":["useHistory","useParams","useEffect","useState","EditUser","userId","people","setPeople","isPending","setIsPending","name","setName","dob","setDob","contactNo","setContactNo","emailId","setEmailId","address","setAddress","facebookUrl","setFacebookUrl","linkedInUrl","setLinkedInUrl","twitterUrl","setTwitterUrl","university","setUniversity","startYear","setStartYear","endYear","setEndYear","degree","setDegree","institution","setInstitution","workStartYear","setWorkStartYear","workEndYear","setWorkEndYear","title","setTitle","education","setEducation","workExperience","setExperience","nameErr","setNameErr","contactNoErr","setContactNoErr","emailIdErr","setEmailIdErr","addressErr","setAddressErr","universityErr","setUniversityErr","degreeErr","setDegreeErr","institutionErr","setInstitutionErr","titleErr","setTitleErr","yearErr","setYearErr","history","fetchData","fetch","then","res","json","data","handleSubmit","e","preventDefault","isValid","formValidation","tempEducation","push","tempExperience","user","method","headers","body","JSON","stringify","target","value"],"mappings":"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","sourcesContent":["import { useHistory, useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport \"../../components/EditUser/editUser.scss\";\n\nconst EditUser = () => {\n    const { userId } = useParams();\n\n    const [people, setPeople] = useState({})\n    const [isPending, setIsPending] = useState(false)\n    \n    let [name, setName] = useState(\"\");\n    let [dob, setDob] = useState(\"\");\n    let [contactNo, setContactNo] = useState(\"\");\n    let [emailId, setEmailId] = useState(\"\");\n    let [address, setAddress] = useState(\"\");\n\n    let [facebookUrl, setFacebookUrl] = useState(\"\");\n    let [linkedInUrl, setLinkedInUrl] = useState(\"\");\n    let [twitterUrl, setTwitterUrl] = useState(\"\");\n\n    let [university, setUniversity] = useState(\"\");\n    let [startYear, setStartYear] = useState(\"\");\n    let [endYear, setEndYear] = useState(\"\");\n    let [degree, setDegree] = useState(\"\");\n\n    let [institution, setInstitution] = useState(\"\");\n    let [workStartYear, setWorkStartYear] = useState(\"\");\n    let [workEndYear, setWorkEndYear] = useState(\"\");\n    let [title, setTitle] = useState(\"\");\n\n    let [education, setEducation] = useState([]);\n    let [workExperience, setExperience] = useState([]);\n\n    const [nameErr, setNameErr] = useState({});\n    const [contactNoErr, setContactNoErr] = useState({});\n    const [emailIdErr, setEmailIdErr] = useState({});\n    const [addressErr, setAddressErr] = useState({});\n    const [universityErr, setUniversityErr] = useState({});\n    const [degreeErr, setDegreeErr] = useState({});\n    const [institutionErr, setInstitutionErr] = useState({});\n    const [titleErr, setTitleErr] = useState({});\n    const [yearErr, setYearErr] = useState({});\n\n    \n    const history = useHistory();\n\n\n    useEffect(()=> {\n        async function fetchData() {\n            await fetch('http://localhost:8080/people/'+userId)\n            .then((res)=>res.json())\n            .then((data)=> {\n                setPeople(data);\n                setName(data.name);\n                setDob(data.dob);\n                setContactNo(data.contactNo);\n                setEmailId(data.emailId);\n                setAddress(data.address);\n\n                setFacebookUrl(data.facebookUrl);\n                setLinkedInUrl(data.linkedInUrl);\n                setTwitterUrl(data.twitterUrl);\n\n                setUniversity(data.education[0].institution)\n                setStartYear(data.education[0].startYear);\n                setEndYear(data.education[0].endYear);\n                setDegree(data.education[0].degree);\n\n                setInstitution(data.workExperience[0].institution);\n                setWorkStartYear(data.workExperience[0].startYear);\n                setWorkEndYear(data.workExperience[0].endYear);\n                setTitle(data.workExperience[0].title);\n            })\n        }\n        fetchData();\n    }, [])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const {nameErr,\n            contactNoErr,\n            emailIdErr,\n            addressErr,\n            universityErr,\n            degreeErr,\n            institutionErr,\n            titleErr,\n            yearErr,\n            isValid }= formValidation(name, contactNo, emailId, address, university, degree, startYear, endYear, institution, workStartYear, workEndYear, title);\n\n            if(!isValid){\n                setNameErr(nameErr);\n                setContactNoErr(contactNoErr);\n                setEmailIdErr(emailIdErr);\n                setAddressErr(addressErr);\n                setUniversityErr(universityErr);\n                setDegreeErr(degreeErr);\n                setInstitutionErr(institutionErr);\n                setTitleErr(titleErr);\n                setYearErr(yearErr);\n    \n            }\n\n            if(isValid){\n\n        let tempEducation = education;\n        tempEducation.push({institution:university, startYear, endYear, degree});\n\n        let tempExperience = workExperience;\n        tempExperience.push({ institution, startYear:workStartYear, endYear:workEndYear, title });\n\n        setEducation(tempEducation);\n        setExperience(tempExperience);\n\n        const user = { name, dob, contactNo, emailId, address, facebookUrl, linkedInUrl, twitterUrl, education, workExperience };\n        setIsPending(true);\n\n        fetch('http://localhost:8080/people/'+userId, {\n            method: 'PUT',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user)\n        }).then(() => {\n            setIsPending(false);\n            history.push('/');\n        })\n\n    }\n    }\n\n    return(\n        <div className=\"edit\">\n            <h2>Edit User Profile</h2>\n            <form onSubmit={handleSubmit}>\n                <label>User Name:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ name }\n                    onChange={(e) => setName(e.target.value)} \n                />\n\n                <label>Date Of Birth:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ dob }\n                    onChange={(e) => setDob(e.target.value)} \n                />\n\n                <label>Contact Number:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ contactNo }\n                    onChange={(e) => setContactNo(e.target.value)}\n                />\n                <label>Email ID:</label>\n                <input\n                    type=\"email\"\n                    required\n                    value={ emailId }\n                    onChange={(e) => setEmailId(e.target.value)}\n                />\n                <label>Address:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ address }\n                    onChange={(e) => setAddress(e.target.value)}\n                />\n\n                <h4>Social Media Profile:</h4>\n                <label>Facebook:</label>\n                <input\n                    type=\"url\"\n                    value={ facebookUrl }\n                    onChange={(e) => setFacebookUrl(e.target.value)}\n                />\n\n                <label>LinkedIn:</label>\n                <input\n                    type=\"url\"\n                    value={ linkedInUrl }\n                    onChange={(e) => setLinkedInUrl(e.target.value)}\n                />\n\n                <label>Twitter:</label>\n                <input\n                    type=\"url\"\n                    value={ twitterUrl }\n                    onChange={(e) => setTwitterUrl(e.target.value)}\n                />\n\n                <h4>Education:</h4>\n                <label>University:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ university }\n                    onChange={(e) => setUniversity(e.target.value)}\n                />\n                <label>Start Year:</label>\n                <input\n                    type=\"number\"\n                    placeholder=\"YYYY\"\n                    min=\"1950\"\n                    max=\"2021\"\n                    required\n                    value={ startYear }\n                    onChange={(e) => setStartYear(e.target.value)}\n                />\n                <label>End Year:</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"YYYY or Present\"\n                    required\n                    value={ endYear }\n                    onChange={(e) => setEndYear(e.target.value)}\n                />\n                <label>Degree:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ degree }\n                    onChange={(e) => setDegree(e.target.value)}\n                />\n                <h4>Experience:</h4>\n                <label>Institution:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ institution }\n                    onChange={(e) => setInstitution(e.target.value)}\n                />\n                 <label>Start Year:</label>\n                <input\n                    type=\"number\"\n                    placeholder=\"YYYY\"\n                    min=\"1950\"\n                    max=\"2021\"\n                    required\n                    value={ workStartYear }\n                    onChange={(e) => setWorkStartYear(e.target.value)}\n                />\n\n                <label>End Year:</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"YYYY or Present\"\n                    required\n                    value={ workEndYear }\n                    onChange={(e) => setWorkEndYear(e.target.value)}\n                />\n\n                <label>Title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ title }\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n\n                { !isPending && <button className=\"button-edit\">Save</button> }\n                { isPending && <button className=\"button-edit\" disabled>Saving...</button> }\n\n            </form>\n        </div>\n    );\n}\n\nexport default EditUser;"]},"metadata":{},"sourceType":"module"}