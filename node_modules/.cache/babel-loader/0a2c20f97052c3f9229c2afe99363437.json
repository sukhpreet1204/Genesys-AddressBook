{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/address-book/src/components/UserList.js\";\nimport React from \"react\";\nimport \"../scss/userList.scss\";\nimport { getRandomColor, createImageFromInitials } from \"../components/ProfilePicture\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserList = ({\n  people,\n  selectedUserId\n}) => {\n  let alphabetOrder = {};\n  console.log(\"people\", people);\n  people.forEach(element => {\n    if (alphabetOrder[element.name[0]]) {\n      alphabetOrder[element.name[0]].push({\n        id: element.id,\n        name: element.name\n      });\n    } else {\n      alphabetOrder[element.name[0]] = [{\n        id: element.id,\n        name: element.name\n      }];\n    }\n  });\n\n  const selectUserId = userId => {\n    selectedUserId(userId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list\",\n    children: Object.keys(alphabetOrder).map(alphabets => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: alphabets.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), alphabetOrder[alphabets].map(people => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => selectUserId(people.id),\n            className: \"user-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"profileImage\",\n              children: [createImageFromInitials(people.name, getRandomColor()), people.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this)\n          }, people.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/components/UserList.js"],"names":["React","getRandomColor","createImageFromInitials","UserList","people","selectedUserId","alphabetOrder","console","log","forEach","element","name","push","id","selectUserId","userId","Object","keys","map","alphabets","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,SAAQC,cAAR,EAAwBC,uBAAxB,QAAsD,8BAAtD;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAA8B;AAC3C,MAAIC,aAAa,GAAG,EAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACAA,EAAAA,MAAM,CAACK,OAAP,CAAeC,OAAO,IAAI;AACtB,QAAGJ,aAAa,CAACI,OAAO,CAACC,IAAR,CAAa,CAAb,CAAD,CAAhB,EAAkC;AAC9BL,MAAAA,aAAa,CAACI,OAAO,CAACC,IAAR,CAAa,CAAb,CAAD,CAAb,CAA+BC,IAA/B,CAAoC;AAACC,QAAAA,EAAE,EAACH,OAAO,CAACG,EAAZ;AAAgBF,QAAAA,IAAI,EAACD,OAAO,CAACC;AAA7B,OAApC;AACH,KAFD,MAEM;AACFL,MAAAA,aAAa,CAACI,OAAO,CAACC,IAAR,CAAa,CAAb,CAAD,CAAb,GAAiC,CAAC;AAACE,QAAAA,EAAE,EAACH,OAAO,CAACG,EAAZ;AAAgBF,QAAAA,IAAI,EAACD,OAAO,CAACC;AAA7B,OAAD,CAAjC;AACH;AACJ,GAND;;AAQA,QAAMG,YAAY,GAAIC,MAAD,IAAY;AAC7BV,IAAAA,cAAc,CAACU,MAAD,CAAd;AACH,GAFD;;AAGI,sBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKC,MAAM,CAACC,IAAP,CAAYX,aAAZ,EAA2BY,GAA3B,CAA+BC,SAAS,iBACrC;AAAA,6BACA;AAAA,gCACA;AAAA,oBAAUA,SAAS,CAACC,WAAV;AAAV;AAAA;AAAA;AAAA;AAAA,gBADA,EAECd,aAAa,CAACa,SAAD,CAAb,CAAyBD,GAAzB,CAA6Bd,MAAM,IAAG;AACnC,8BAAQ;AAAK,YAAA,OAAO,EAAE,MAAKU,YAAY,CAACV,MAAM,CAACS,EAAR,CAA/B;AAA4C,YAAA,SAAS,EAAC,cAAtD;AAAA,mCAEJ;AAAK,cAAA,EAAE,EAAC,cAAR;AAAA,yBAAwBX,uBAAuB,CAACE,MAAM,CAACO,IAAR,EAAcV,cAAc,EAA5B,CAA/C,EAAgFG,MAAM,CAACO,IAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFI,aAA0EP,MAAM,CAACS,EAAjF;AAAA;AAAA;AAAA;AAAA,kBAAR;AAIQ,SALX,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADH;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAkBP,CAhCD;;KAAMV,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport \"../scss/userList.scss\";\nimport {getRandomColor, createImageFromInitials} from \"../components/ProfilePicture\";\n\nconst UserList = ({people, selectedUserId}) => {\n    let alphabetOrder = {}\n    console.log(\"people\", people);\n    people.forEach(element => {\n        if(alphabetOrder[element.name[0]]){\n            alphabetOrder[element.name[0]].push({id:element.id, name:element.name})\n        }else {\n            alphabetOrder[element.name[0]] = [{id:element.id, name:element.name}]\n        }\n    });\n\n    const selectUserId = (userId) => {\n        selectedUserId(userId)\n    }\n        return ( \n        <div className=\"user-list\">\n            {Object.keys(alphabetOrder).map(alphabets=> \n                <>\n                <details>\n                <summary>{alphabets.toUpperCase()}</summary>\n                {alphabetOrder[alphabets].map(people=> {\n                    return (<div onClick={()=> selectUserId(people.id)} className=\"user-preview\" key={people.id}>\n                        \n                        <div id=\"profileImage\">{createImageFromInitials(people.name, getRandomColor())}{people.name} \n                       </div>\n                    </div>)})\n                }</details>\n                </>\n                \n            )}\n        </div>\n     );\n}\n \nexport default UserList;"]},"metadata":{},"sourceType":"module"}