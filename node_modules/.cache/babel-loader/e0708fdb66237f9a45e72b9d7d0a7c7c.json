{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/address-book/src/components/Create.js\",\n    _s = $RefreshSig$();\n\nimport { queryAllByTitle } from \"@testing-library/dom\";\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport \"../scss/create.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [contactNo, setContactNo] = useState('');\n  const [emailId, setEmailId] = useState('');\n  const [address, setAddress] = useState('');\n  const [university, setUniversity] = useState('');\n  const [startYear, setStartYear] = useState('');\n  const [endYear, setEndYear] = useState('');\n  const [degree, setDegree] = useState('');\n  const [institution, setInstitution] = useState('');\n  const [workStartYear, setWorkStartYear] = useState('');\n  const [workEndYear, setWorkEndYear] = useState('');\n  const [title, setTitle] = useState('');\n  const [education, setEducation] = useState([]);\n  const [workExperience, setExperience] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n\n  const handleFormValidation = () => {\n    let formErrors = {};\n    let formIsValid = true;\n\n    if (!name) {\n      formIsValid = false;\n      formErrors[\"nameError\"] = \"Name is required.\";\n    }\n\n    if (!contactNo) {\n      formIsValid = false;\n      formErrors[\"contactNoError\"] = \"Contact number is required.\";\n    } else {\n      var numberPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;\n\n      if (!numberPattern.test(contactNo)) {\n        formIsValid = false;\n        formErrors[\"contactNoError\"] = \"Invalid contact number.\";\n      }\n    }\n\n    if (!emailId) {\n      formIsValid = false;\n      formErrors[\"emailIdError\"] = \"Email id is required.\";\n    } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailId)) {\n      formIsValid = false;\n      formErrors[\"emailIdError\"] = \"Invalid email id.\";\n    }\n\n    if (!address) {\n      formIsValid = false;\n      formErrors[\"addressError\"] = \"Address is required.\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.handleFormValidation()) {\n      let tempEducation = education;\n      tempEducation.push({\n        institution: university,\n        startYear,\n        endYear,\n        degree\n      });\n      let tempExperience = workExperience;\n      tempExperience.push({\n        institution,\n        startYear: workStartYear,\n        endYear: workEndYear,\n        title\n      });\n      setEducation(tempEducation);\n      setExperience(tempExperience);\n      const user = {\n        name,\n        contactNo,\n        emailId,\n        address,\n        education,\n        workExperience\n      };\n      setIsPending(true);\n      fetch('http://localhost:8000/people', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(() => {\n        setIsPending(false);\n        history.push('/');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a new User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        children: this.state.errors[\"name\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contact Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: contactNo,\n        onChange: e => setContactNo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        value: emailId,\n        onChange: e => setEmailId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Education:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"University:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: university,\n        onChange: e => setUniversity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: startYear,\n        onChange: e => setStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: endYear,\n        onChange: e => setEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Degree:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: degree,\n        onChange: e => setDegree(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Institution:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: institution,\n        onChange: e => setInstitution(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: workStartYear,\n        onChange: e => setWorkStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: workEndYear,\n        onChange: e => setWorkEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Creating...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"yLMAFxSdoV4lvyBypuUhKsENh18=\", false, function () {\n  return [useHistory];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/components/Create.js"],"names":["queryAllByTitle","useState","useHistory","Create","name","setName","contactNo","setContactNo","emailId","setEmailId","address","setAddress","university","setUniversity","startYear","setStartYear","endYear","setEndYear","degree","setDegree","institution","setInstitution","workStartYear","setWorkStartYear","workEndYear","setWorkEndYear","title","setTitle","education","setEducation","workExperience","setExperience","isPending","setIsPending","history","handleFormValidation","formErrors","formIsValid","numberPattern","test","setState","errors","handleSubmit","e","preventDefault","tempEducation","push","tempExperience","user","fetch","method","headers","body","JSON","stringify","then","target","value","color","state"],"mappings":"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","sourcesContent":["import { queryAllByTitle } from \"@testing-library/dom\";\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport \"../scss/create.scss\";\n\n\nconst Create = () => {\n    const [name, setName] = useState('');\n    const [contactNo, setContactNo] = useState('');\n    const [emailId, setEmailId] = useState('');\n    const [address, setAddress] = useState('');\n\n    const [university, setUniversity] = useState('');\n    const [startYear, setStartYear] = useState('');\n    const [endYear, setEndYear] = useState('');\n    const [degree, setDegree] = useState('');\n\n    const [institution, setInstitution] = useState('');\n    const [workStartYear, setWorkStartYear] = useState('');\n    const [workEndYear, setWorkEndYear] = useState('');\n    const [title, setTitle] = useState('');\n\n    const [education, setEducation] = useState([]);\n    const [workExperience, setExperience] = useState([]);\n\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n    const handleFormValidation = () => {\n        let formErrors = {};    \n        let formIsValid = true;  \n        \n        if(!name){\n            formIsValid = false;\n            formErrors[\"nameError\"] = \"Name is required.\"; \n        }\n\n        if (!contactNo) {    \n            formIsValid = false;    \n            formErrors[\"contactNoError\"] = \"Contact number is required.\";    \n        }    \n        else {    \n            var numberPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;    \n            if (!numberPattern.test(contactNo)) {    \n                formIsValid = false;    \n                formErrors[\"contactNoError\"] = \"Invalid contact number.\";    \n            }    \n        }    \n\n        if (!emailId) {    \n            formIsValid = false;    \n            formErrors[\"emailIdError\"] = \"Email id is required.\";    \n        }    \n        else if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailId))) {    \n    \n            formIsValid = false;    \n            formErrors[\"emailIdError\"] = \"Invalid email id.\";    \n        }  \n        \n        if(!address){\n            formIsValid = false;\n            formErrors[\"addressError\"] = \"Address is required.\"; \n        }\n\n        this.setState({errors: errors});\n        return formIsValid;\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(this.handleFormValidation()){\n\n        \n        let tempEducation = education;\n        tempEducation.push({institution:university, startYear, endYear, degree});\n\n        let tempExperience = workExperience;\n        tempExperience.push({ institution, startYear:workStartYear, endYear:workEndYear, title });\n\n        setEducation(tempEducation);\n        setExperience(tempExperience);\n        \n        const user = { name, contactNo, emailId, address, education, workExperience };\n        \n        setIsPending(true);\n\n        fetch('http://localhost:8000/people', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user)\n        }).then(() => {\n            setIsPending(false);\n            history.push('/');\n        })\n        }\n    }\n\n    return ( \n        <div className=\"create\">\n            <h2>Create a new User</h2>\n            <form onSubmit={handleSubmit}>  \n                <label>User Name:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ name }\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <span style={{color: \"red\"}}>{this.state.errors[\"name\"]}</span>\n                <label>Contact Number:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ contactNo }\n                    onChange={(e) => setContactNo(e.target.value)}\n                />\n                <label>Email ID:</label>\n                <input\n                    type=\"email\"\n                    required\n                    value={ emailId }\n                    onChange={(e) => setEmailId(e.target.value)}\n                />\n                <label>Address:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ address }\n                    onChange={(e) => setAddress(e.target.value)}\n                />\n                <h4>Education:</h4>\n                <label>University:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ university }\n                    onChange={(e) => setUniversity(e.target.value)}\n                />\n                <label>Start Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ startYear }\n                    onChange={(e) => setStartYear(e.target.value)}\n                />\n                <label>End Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ endYear }\n                    onChange={(e) => setEndYear(e.target.value)}\n                />\n                <label>Degree:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ degree }\n                    onChange={(e) => setDegree(e.target.value)}\n                />\n\n                <h4>Experience:</h4>\n                <label>Institution:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ institution }\n                    onChange={(e) => setInstitution(e.target.value)}\n                />\n\n                <label>Start Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ workStartYear }\n                    onChange={(e) => setWorkStartYear(e.target.value)}\n                />\n\n                <label>End Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ workEndYear }\n                    onChange={(e) => setWorkEndYear(e.target.value)}\n                />\n\n                <label>Title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ title }\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n\n\n                \n\n                \n                { !isPending && <button>Create User</button> }\n                { isPending && <button disabled>Creating...</button> }\n                \n            </form>\n        </div>\n     );\n}\n \nexport default Create;"]},"metadata":{},"sourceType":"module"}