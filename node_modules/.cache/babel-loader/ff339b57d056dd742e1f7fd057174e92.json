{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/address-book/src/components/CreateUser/Create.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport checkYearValidation from \"../../utils/checkYearValidation\";\nimport AddEducation from \"../../components/AddEducation/AddEducation\";\nimport { RiFileAddFill } from \"react-icons/ri\";\nimport \"../../components/CreateUser/create.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [contactNo, setContactNo] = useState('');\n  const [emailId, setEmailId] = useState('');\n  const [address, setAddress] = useState('');\n  const [university, setUniversity] = useState('');\n  const [startYear, setStartYear] = useState('');\n  const [endYear, setEndYear] = useState('');\n  const [degree, setDegree] = useState('');\n  const [institution, setInstitution] = useState('');\n  const [workStartYear, setWorkStartYear] = useState('');\n  const [workEndYear, setWorkEndYear] = useState('');\n  const [title, setTitle] = useState('');\n  const [education, setEducation] = useState([]);\n  const [workExperience, setExperience] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n  const [nameErr, setNameErr] = useState({});\n  const [contactNoErr, setContactNoErr] = useState({});\n  const [emailIdErr, setEmailIdErr] = useState({});\n  const [addressErr, setAddressErr] = useState({});\n  const [universityErr, setUniversityErr] = useState({});\n  const [degreeErr, setDegreeErr] = useState({});\n  const [institutionErr, setInstitutionErr] = useState({});\n  const [titleErr, setTitleErr] = useState({});\n  const [yearErr, setYearErr] = useState({});\n  const [addEducation, setAddEducation] = useState([]);\n\n  const triggerAddEducation = () => {\n    setAddEducation('addEducation');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = formValidation();\n\n    if (isValid) {\n      let tempEducation = education;\n      tempEducation.push({\n        institution: university,\n        startYear,\n        endYear,\n        degree\n      });\n      let tempExperience = workExperience;\n      tempExperience.push({\n        institution,\n        startYear: workStartYear,\n        endYear: workEndYear,\n        title\n      });\n      setEducation(tempEducation);\n      setExperience(tempExperience);\n      const user = {\n        name,\n        contactNo,\n        emailId,\n        address,\n        education,\n        workExperience\n      };\n      setIsPending(true);\n      fetch('http://localhost:8080/people', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(() => {\n        setIsPending(false);\n        history.push('/');\n      });\n    }\n  };\n\n  const formValidation = () => {\n    const nameErr = {};\n    const contactNoErr = {};\n    const emailIdErr = {};\n    const addressErr = {};\n    const universityErr = {};\n    const degreeErr = {};\n    const institutionErr = {};\n    const titleErr = {};\n    const yearErr = {};\n    let isValid = true;\n\n    if (!name) {\n      nameErr.mandatory = \"Name is required\";\n      isValid = false;\n    }\n\n    if (name.length < 3) {\n      nameErr.nameShort = \"Name is too short\";\n      isValid = false;\n    }\n\n    if (!contactNo) {\n      contactNoErr.mandatory = \"Contact number is required\";\n      isValid = false;\n    } else {\n      var numberPattern = /^\\d{10}$/;\n\n      if (!numberPattern.test(contactNo)) {\n        contactNoErr.invalid = \"Invalid Contact Number\";\n        isValid = false;\n      }\n    }\n\n    if (!emailId) {\n      emailIdErr.mandatory = \"Email ID is required\";\n      isValid = false;\n    } else if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(emailId)) {\n      emailIdErr.invalid = \"Invalid email id.\";\n      isValid = false;\n    }\n\n    if (!address) {\n      addressErr.mandatory = \"Address is required\";\n      isValid = false;\n    }\n\n    if (address.length < 3) {\n      addressErr.addressShort = \"Address is too short\";\n      isValid = false;\n    }\n\n    if (!university) {\n      universityErr.mandatory = \"University is required\";\n      isValid = false;\n    }\n\n    if (university.length < 3) {\n      universityErr.universityShort = \"University Name is too short\";\n      isValid = false;\n    }\n\n    if (!checkYearValidation(startYear, endYear)) {\n      yearErr.invalidYear = \"Start Year should be less than End Year\";\n      isValid = false;\n    }\n\n    if (!degree) {\n      degreeErr.mandatory = \"Degree is required\";\n      isValid = false;\n    }\n\n    if (!institution) {\n      institutionErr.mandatory = \"Institution is required\";\n      isValid = false;\n    }\n\n    if (institution.length < 3) {\n      institutionErr.institutionShort = \"Institution Name is too short\";\n      isValid = false;\n    }\n\n    if (!checkYearValidation(workStartYear, workEndYear)) {\n      yearErr.invalidYear = \"Start Year should be less than End Year\";\n      isValid = false;\n    }\n\n    if (!title) {\n      titleErr.mandatory = \"Title is required\";\n      isValid = false;\n    }\n\n    if (title.length < 3) {\n      titleErr.titleShort = \"Title is too short\";\n      isValid = false;\n    }\n\n    setNameErr(nameErr);\n    setContactNoErr(contactNoErr);\n    setEmailIdErr(emailIdErr);\n    setAddressErr(addressErr);\n    setUniversityErr(universityErr);\n    setDegreeErr(degreeErr);\n    setInstitutionErr(institutionErr);\n    setTitleErr(titleErr);\n    setYearErr(yearErr);\n    return isValid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a new User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), Object.keys(nameErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: nameErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contact Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: contactNo,\n        onChange: e => setContactNo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), Object.keys(contactNoErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: contactNoErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        value: emailId,\n        onChange: e => setEmailId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), Object.keys(emailIdErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: emailIdErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), Object.keys(addressErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: addressErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Education:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"University:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: university,\n        onChange: e => setUniversity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), Object.keys(universityErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: universityErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"YYYY\",\n        min: \"1950\",\n        max: \"2021\",\n        required: true,\n        value: startYear,\n        onChange: e => setStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), Object.keys(yearErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: yearErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"YYYY or Present\",\n        required: true,\n        value: endYear,\n        onChange: e => setEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Degree:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: degree,\n        onChange: e => setDegree(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), Object.keys(degreeErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: degreeErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: triggerAddEducation,\n        children: /*#__PURE__*/_jsxDEV(RiFileAddFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: addEducation === 'addEducation' && /*#__PURE__*/_jsxDEV(AddEducation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 58\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Institution:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: institution,\n        onChange: e => setInstitution(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), Object.keys(institutionErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: institutionErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"YYYY\",\n        min: \"1950\",\n        max: \"2021\",\n        required: true,\n        value: workStartYear,\n        onChange: e => setWorkStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), Object.keys(yearErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: yearErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"YYYY or Present\",\n        required: true,\n        value: workEndYear,\n        onChange: e => setWorkEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this), Object.keys(titleErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: titleErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 28\n        }, this);\n      }), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-create\",\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 33\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-create\",\n        disabled: true,\n        children: \"Creating...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"9EC5AIs1xwLKcJHLMm/jKPNoXYs=\", false, function () {\n  return [useHistory];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/components/CreateUser/Create.js"],"names":["useState","useHistory","checkYearValidation","AddEducation","RiFileAddFill","Create","name","setName","contactNo","setContactNo","emailId","setEmailId","address","setAddress","university","setUniversity","startYear","setStartYear","endYear","setEndYear","degree","setDegree","institution","setInstitution","workStartYear","setWorkStartYear","workEndYear","setWorkEndYear","title","setTitle","education","setEducation","workExperience","setExperience","isPending","setIsPending","history","nameErr","setNameErr","contactNoErr","setContactNoErr","emailIdErr","setEmailIdErr","addressErr","setAddressErr","universityErr","setUniversityErr","degreeErr","setDegreeErr","institutionErr","setInstitutionErr","titleErr","setTitleErr","yearErr","setYearErr","addEducation","setAddEducation","triggerAddEducation","handleSubmit","e","preventDefault","isValid","formValidation","tempEducation","push","tempExperience","user","fetch","method","headers","body","JSON","stringify","then","mandatory","length","nameShort","numberPattern","test","invalid","addressShort","universityShort","invalidYear","institutionShort","titleShort","target","value","Object","keys","map","key","color"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport  checkYearValidation  from \"../../utils/checkYearValidation\";\nimport AddEducation from \"../../components/AddEducation/AddEducation\";\nimport { RiFileAddFill } from \"react-icons/ri\";\nimport \"../../components/CreateUser/create.scss\";\n\nconst Create = () => {\n    const [name, setName] = useState('');\n    const [contactNo, setContactNo] = useState('');\n    const [emailId, setEmailId] = useState('');\n    const [address, setAddress] = useState('');\n\n    const [university, setUniversity] = useState('');\n    const [startYear, setStartYear] = useState('');\n    const [endYear, setEndYear] = useState('');\n    const [degree, setDegree] = useState('');\n\n    const [institution, setInstitution] = useState('');\n    const [workStartYear, setWorkStartYear] = useState('');\n    const [workEndYear, setWorkEndYear] = useState('');\n    const [title, setTitle] = useState('');\n\n    const [education, setEducation] = useState([]);\n    const [workExperience, setExperience] = useState([]);\n\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n    const [nameErr, setNameErr] = useState({});\n    const [contactNoErr, setContactNoErr] = useState({});\n    const [emailIdErr, setEmailIdErr] = useState({});\n    const [addressErr, setAddressErr] = useState({});\n    const [universityErr, setUniversityErr] = useState({});\n    const [degreeErr, setDegreeErr] = useState({});\n    const [institutionErr, setInstitutionErr] = useState({});\n    const [titleErr, setTitleErr] = useState({});\n    const [yearErr, setYearErr] = useState({});\n\n    const [addEducation, setAddEducation] = useState([]);\n\n    const triggerAddEducation = () => {\n        setAddEducation('addEducation');\n    }\n\n\n \n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const isValid = formValidation();\n\n        if(isValid){\n        let tempEducation = education;\n        tempEducation.push({institution:university, startYear, endYear, degree});\n\n        let tempExperience = workExperience;\n        tempExperience.push({ institution, startYear:workStartYear, endYear:workEndYear, title });\n\n        setEducation(tempEducation);\n        setExperience(tempExperience);\n        \n        const user = { name, contactNo, emailId, address, education, workExperience };\n        \n        setIsPending(true);\n\n        fetch('http://localhost:8080/people', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user)\n        }).then(() => {\n            setIsPending(false);\n            history.push('/');\n        })\n    }\n    }\n\n    const formValidation = () => {\n        const nameErr = {};\n        const contactNoErr = {};\n        const emailIdErr = {};\n        const addressErr = {};\n        const universityErr = {};\n        const degreeErr = {};\n        const institutionErr = {};\n        const titleErr = {};\n        const yearErr = {};\n          let isValid = true;\n\n        if(!name){\n            nameErr.mandatory = \"Name is required\";\n            isValid = false;\n        }\n        if(name.length < 3){\n            nameErr.nameShort = \"Name is too short\";\n            isValid = false;\n        }\n\n        if(!contactNo){\n            contactNoErr.mandatory = \"Contact number is required\";\n            isValid = false;\n        }\n        else{  \n            var numberPattern = /^\\d{10}$/;  \n            if (!numberPattern.test(contactNo)) {     \n                contactNoErr.invalid = \"Invalid Contact Number\"; \n                isValid = false;  \n            }    \n\n        }\n\n        if(!emailId){\n            emailIdErr.mandatory = \"Email ID is required\";\n            isValid = false;\n        }\n        else if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(emailId))) {       \n            emailIdErr.invalid = \"Invalid email id.\";  \n            isValid = false;  \n        } \n        \n        if(!address){\n            addressErr.mandatory = \"Address is required\";\n            isValid = false;\n        }\n        if(address.length < 3){\n            addressErr.addressShort = \"Address is too short\";\n            isValid = false;\n        }\n\n        if(!university){\n            universityErr.mandatory = \"University is required\";\n            isValid = false;\n        }\n        if(university.length < 3){\n            universityErr.universityShort = \"University Name is too short\";\n            isValid = false;\n        }\n\n        if(!checkYearValidation(startYear, endYear)){\n            yearErr.invalidYear = \"Start Year should be less than End Year\";\n            isValid = false;\n        }\n\n        if(!degree){\n            degreeErr.mandatory = \"Degree is required\";\n            isValid = false;\n        }\n\n        if(!institution){\n            institutionErr.mandatory = \"Institution is required\";\n            isValid = false;\n        }\n        if(institution.length < 3){\n            institutionErr.institutionShort = \"Institution Name is too short\";\n            isValid = false;\n        }\n\n        if(!checkYearValidation(workStartYear, workEndYear)){\n            yearErr.invalidYear = \"Start Year should be less than End Year\";\n            isValid = false;\n        }\n\n        if(!title){\n            titleErr.mandatory = \"Title is required\";\n            isValid = false;\n        }\n        if(title.length < 3){\n            titleErr.titleShort = \"Title is too short\";\n            isValid = false;\n        }\n\n        setNameErr(nameErr);\n        setContactNoErr(contactNoErr);\n        setEmailIdErr(emailIdErr);\n        setAddressErr(addressErr);\n        setUniversityErr(universityErr);\n        setDegreeErr(degreeErr);\n        setInstitutionErr(institutionErr);\n        setTitleErr(titleErr);\n        setYearErr(yearErr);\n\n        return isValid;\n        \n\n    }\n\n    return ( \n        <div className=\"create\">\n            <h2>Create a new User</h2>\n            <form onSubmit={handleSubmit}>  \n                <label>User Name:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ name }\n                    onChange={(e) => setName(e.target.value)} \n                />\n                {Object.keys(nameErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{nameErr[key]}</div>\n                })}\n                \n                <label>Contact Number:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ contactNo }\n                    onChange={(e) => setContactNo(e.target.value)}\n                />\n                 {Object.keys(contactNoErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{contactNoErr[key]}</div>\n                })}\n\n                <label>Email ID:</label>\n                <input\n                    type=\"email\"\n                    required\n                    value={ emailId }\n                    onChange={(e) => setEmailId(e.target.value)}\n                />\n                {Object.keys(emailIdErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{emailIdErr[key]}</div>\n                })}\n\n                <label>Address:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ address }\n                    onChange={(e) => setAddress(e.target.value)}\n                />\n                {Object.keys(addressErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{addressErr[key]}</div>\n                })}\n\n                <h4>Education:</h4>\n                <label>University:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ university }\n                    onChange={(e) => setUniversity(e.target.value)}\n                />\n                {Object.keys(universityErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{universityErr[key]}</div>\n                })}\n\n                <label>Start Year:</label>\n                <input\n                    type=\"number\"\n                    placeholder=\"YYYY\"\n                    min=\"1950\"\n                    max=\"2021\"\n                    required\n                    value={ startYear }\n                    onChange={(e) => setStartYear(e.target.value)}\n                />\n                {Object.keys(yearErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{yearErr[key]}</div>\n                })}\n                <label>End Year:</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"YYYY or Present\"\n                    required\n                    value={ endYear }\n                    onChange={(e) => setEndYear(e.target.value)}\n                />\n                <label>Degree:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ degree }\n                    onChange={(e) => setDegree(e.target.value)}\n                />\n                {Object.keys(degreeErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{degreeErr[key]}</div>\n                })}\n\n                <button onClick={triggerAddEducation}><RiFileAddFill /></button>\n                <div>{addEducation === 'addEducation' && <AddEducation />}</div>\n\n                <h4>Experience:</h4>\n                <label>Institution:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ institution }\n                    onChange={(e) => setInstitution(e.target.value)}\n                />\n                {Object.keys(institutionErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{institutionErr[key]}</div>\n                })}\n\n                <label>Start Year:</label>\n                <input\n                    type=\"number\"\n                    placeholder=\"YYYY\"\n                    min=\"1950\"\n                    max=\"2021\"\n                    required\n                    value={ workStartYear }\n                    onChange={(e) => setWorkStartYear(e.target.value)}\n                />\n                 {Object.keys(yearErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{yearErr[key]}</div>\n                })}\n\n                <label>End Year:</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"YYYY or Present\"\n                    required\n                    value={ workEndYear }\n                    onChange={(e) => setWorkEndYear(e.target.value)}\n                />\n\n                <label>Title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ title }\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                {Object.keys(titleErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{titleErr[key]}</div>\n                })}\n\n                { !isPending && <button className=\"button-create\">Create User</button> }\n                { isPending && <button className=\"button-create\" disabled>Creating...</button> }\n                \n            </form>\n\n            \n        </div>\n     );\n}\n \nexport default Create;"]},"metadata":{},"sourceType":"module"}