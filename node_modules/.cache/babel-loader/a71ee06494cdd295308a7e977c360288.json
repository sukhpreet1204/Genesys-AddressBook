{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/address-book/src/components/UserList.js\";\nimport React from \"react\";\nimport \"../scss/userList.scss\";\nimport { getRandomColor, createImageFromInitials } from \"../components/ProfilePicture\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserList = ({\n  people,\n  selectedUserId\n}) => {\n  let alphabetOrder = {};\n  console.log(\"people\", people);\n  people.forEach(element => {\n    if (alphabetOrder[element.name[0]]) {\n      alphabetOrder[element.name[0]].push({\n        id: element.id,\n        name: element.name\n      });\n    } else {\n      alphabetOrder[element.name[0]] = [{\n        id: element.id,\n        name: element.name\n      }];\n    }\n  });\n\n  const selectUserId = userId => {\n    selectedUserId(userId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list\",\n    children: Object.keys(alphabetOrder).map(alphabets => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: alphabets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 19\n      }, this), alphabetOrder[alphabets].map(people => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => selectUserId(people.id),\n          className: \"user-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"preview\",\n            src: createImageFromInitials(300, people.name, getRandomColor()),\n            alt: \"profile-picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: people.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 24\n          }, this)]\n        }, people.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/components/UserList.js"],"names":["React","getRandomColor","createImageFromInitials","UserList","people","selectedUserId","alphabetOrder","console","log","forEach","element","name","push","id","selectUserId","userId","Object","keys","map","alphabets"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,SAAQC,cAAR,EAAwBC,uBAAxB,QAAsD,8BAAtD;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAA8B;AAC3C,MAAIC,aAAa,GAAG,EAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACAA,EAAAA,MAAM,CAACK,OAAP,CAAeC,OAAO,IAAI;AACtB,QAAGJ,aAAa,CAACI,OAAO,CAACC,IAAR,CAAa,CAAb,CAAD,CAAhB,EAAkC;AAC9BL,MAAAA,aAAa,CAACI,OAAO,CAACC,IAAR,CAAa,CAAb,CAAD,CAAb,CAA+BC,IAA/B,CAAoC;AAACC,QAAAA,EAAE,EAACH,OAAO,CAACG,EAAZ;AAAgBF,QAAAA,IAAI,EAACD,OAAO,CAACC;AAA7B,OAApC;AACH,KAFD,MAEM;AACFL,MAAAA,aAAa,CAACI,OAAO,CAACC,IAAR,CAAa,CAAb,CAAD,CAAb,GAAiC,CAAC;AAACE,QAAAA,EAAE,EAACH,OAAO,CAACG,EAAZ;AAAgBF,QAAAA,IAAI,EAACD,OAAO,CAACC;AAA7B,OAAD,CAAjC;AACH;AACJ,GAND;;AAQA,QAAMG,YAAY,GAAIC,MAAD,IAAY;AAC7BV,IAAAA,cAAc,CAACU,MAAD,CAAd;AACH,GAFD;;AAGI,sBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKC,MAAM,CAACC,IAAP,CAAYX,aAAZ,EAA2BY,GAA3B,CAA+BC,SAAS,iBACrC;AAAA,8BAAE;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAF,EACCb,aAAa,CAACa,SAAD,CAAb,CAAyBD,GAAzB,CAA6Bd,MAAM,IAAG;AACnC,4BAAQ;AAAK,UAAA,OAAO,EAAE,MAAKU,YAAY,CAACV,MAAM,CAACS,EAAR,CAA/B;AAA4C,UAAA,SAAS,EAAC,cAAtD;AAAA,kCACJ;AACI,YAAA,EAAE,EAAC,SADP;AAEI,YAAA,GAAG,EACCX,uBAAuB,CAAC,GAAD,EAAKE,MAAM,CAACO,IAAZ,EAAkBV,cAAc,EAAhC,CAH/B;AAKI,YAAA,GAAG,EAAG;AALV;AAAA;AAAA;AAAA;AAAA,kBADI,eAQL;AAAA,sBAAIG,MAAM,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,kBARK;AAAA,WAA0EP,MAAM,CAACS,EAAjF;AAAA;AAAA;AAAA;AAAA,gBAAR;AASQ,OAVX,CADD;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAoBP,CAlCD;;KAAMV,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport \"../scss/userList.scss\";\nimport {getRandomColor, createImageFromInitials} from \"../components/ProfilePicture\";\n\nconst UserList = ({people, selectedUserId}) => {\n    let alphabetOrder = {}\n    console.log(\"people\", people);\n    people.forEach(element => {\n        if(alphabetOrder[element.name[0]]){\n            alphabetOrder[element.name[0]].push({id:element.id, name:element.name})\n        }else {\n            alphabetOrder[element.name[0]] = [{id:element.id, name:element.name}]\n        }\n    });\n\n    const selectUserId = (userId) => {\n        selectedUserId(userId)\n    }\n        return ( \n        <div className=\"user-list\">\n            {Object.keys(alphabetOrder).map(alphabets=> \n                <><h3>{alphabets}</h3>\n                {alphabetOrder[alphabets].map(people=> {\n                    return (<div onClick={()=> selectUserId(people.id)} className=\"user-preview\" key={people.id}>\n                        <img\n                            id=\"preview\"\n                            src = {\n                                createImageFromInitials(300,people.name, getRandomColor())\n                            }\n                            alt = \"profile-picture\"\n                        />\n                       <p>{people.name}</p>\n                    </div>)})\n                }</>\n                \n            )}\n        </div>\n     );\n}\n \nexport default UserList;"]},"metadata":{},"sourceType":"module"}