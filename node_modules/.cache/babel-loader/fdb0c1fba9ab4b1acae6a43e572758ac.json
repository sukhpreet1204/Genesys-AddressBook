{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/address-book/src/components/EditUser.js\",\n    _s = $RefreshSig$();\n\nimport useFetch from \"../api/useFetch\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport \"../scss/editUser.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUser = () => {\n  _s();\n\n  console.log(\"edit user\");\n  const {\n    userId\n  } = useParams();\n  const [people, setPeople] = useState({});\n  console.log(\"userIdEdit\", userId);\n  const [isPending, setIsPending] = useState(false);\n  const [error, setError] = useState(null); // const { data: people, error, isPending } = useFetch('http://localhost:8000/people/' + userId);\n\n  console.log(\"people\", people);\n  let [name, setName] = useState(\"\");\n  let [contactNo, setContactNo] = useState(\"\");\n  let [emailId, setEmailId] = useState(\"\");\n  let [address, setAddress] = useState(\"\");\n  let [university, setUniversity] = useState(\"\");\n  let [startYear, setStartYear] = useState(\"\");\n  let [endYear, setEndYear] = useState(\"\");\n  let [degree, setDegree] = useState(\"\");\n  let [institution, setInstitution] = useState(\"\");\n  let [workStartYear, setWorkStartYear] = useState('');\n  let [workEndYear, setWorkEndYear] = useState('');\n  let [title, setTitle] = useState('');\n  let [education, setEducation] = useState([]);\n  let [workExperience, setExperience] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    async function fetchData() {\n      await fetch('http://localhost:8000/people/' + userId).then(res => res.json()).then(data => {\n        console.log(\"data*************\", data); // set values here\n\n        setPeople(data);\n        setName(data.name);\n        setContactNo(data.contactNo);\n        setEmailId(data.emailId);\n        setAddress(data.address);\n        setUniversity(data.education[0].institution);\n        setStartYear(data.education[0].startYear);\n        setEndYear(data.education[0].endYear);\n        setDegree(data.education[0].degree);\n        setInstitution(data.workExperience[0].institution);\n        setWorkEndYear(data.workExperience[0].workStartYear);\n        setWorkEndYear(data.workExperience[0].workEndYear);\n        setTitle(data.workExperience[0].title);\n      });\n    }\n\n    fetchData();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let tempEducation = education;\n    tempEducation.push({\n      institution: university,\n      startYear,\n      endYear,\n      degree\n    });\n    let tempExperience = workExperience;\n    tempExperience.push({\n      institution,\n      startYear: workStartYear,\n      endYear: workEndYear,\n      title\n    });\n    setEducation(tempEducation);\n    setExperience(tempExperience);\n    const user = {\n      name,\n      contactNo,\n      emailId,\n      address,\n      education,\n      workExperience\n    };\n    setIsPending(true);\n    fetch('http://localhost:8000/people' + userId, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(() => {\n      setIsPending(false);\n      history.push('/');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contact Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: contactNo,\n        onChange: e => setContactNo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        value: emailId,\n        onChange: e => setEmailId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Education:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"University:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: university,\n        onChange: e => setUniversity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"YYYY\",\n        min: \"1950\",\n        max: \"2021\",\n        required: true,\n        value: startYear,\n        onChange: e => setStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"YYYY or Present\",\n        required: true,\n        value: endYear,\n        onChange: e => setEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Degree:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: degree,\n        onChange: e => setDegree(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Institution:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: institution,\n        onChange: e => setInstitution(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"YYYY\",\n        min: \"1950\",\n        max: \"2021\",\n        required: true,\n        value: workStartYear,\n        onChange: e => setWorkStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"YYYY or Present\",\n        required: true,\n        value: workEndYear,\n        onChange: e => setWorkEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-edit\",\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-edit\",\n        disabled: true,\n        children: \"Editing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditUser, \"iD6P+dr/N2cQ5tyXzVw4snfthwY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditUser;\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/components/EditUser.js"],"names":["useFetch","useHistory","useParams","useEffect","useState","EditUser","console","log","userId","people","setPeople","isPending","setIsPending","error","setError","name","setName","contactNo","setContactNo","emailId","setEmailId","address","setAddress","university","setUniversity","startYear","setStartYear","endYear","setEndYear","degree","setDegree","institution","setInstitution","workStartYear","setWorkStartYear","workEndYear","setWorkEndYear","title","setTitle","education","setEducation","workExperience","setExperience","history","fetchData","fetch","then","res","json","data","handleSubmit","e","preventDefault","tempEducation","push","tempExperience","user","method","headers","body","JSON","stringify","target","value"],"mappings":"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","sourcesContent":["import useFetch from \"../api/useFetch\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport \"../scss/editUser.scss\";\n\nconst EditUser = () => {\n\n    console.log(\"edit user\")\n    const { userId } = useParams();\n    const [people, setPeople] = useState({})\n    console.log(\"userIdEdit\", userId);\n    const [isPending, setIsPending] = useState(false)\n    const [error, setError] = useState(null)\n    // const { data: people, error, isPending } = useFetch('http://localhost:8000/people/' + userId);\n    console.log(\"people\", people);\n    \n    let [name, setName] = useState(\"\");\n    let [contactNo, setContactNo] = useState(\"\");\n    let [emailId, setEmailId] = useState(\"\");\n    let [address, setAddress] = useState(\"\");\n\n    let [university, setUniversity] = useState(\"\");\n    let [startYear, setStartYear] = useState(\"\");\n    let [endYear, setEndYear] = useState(\"\");\n    let [degree, setDegree] = useState(\"\");\n\n    let [institution, setInstitution] = useState(\"\");\n    let [workStartYear, setWorkStartYear] = useState('');\n    let [workEndYear, setWorkEndYear] = useState('');\n    let [title, setTitle] = useState('');\n\n    let [education, setEducation] = useState([]);\n    let [workExperience, setExperience] = useState([]);\n\n    \n    const history = useHistory();\n\n\n    useEffect(()=> {\n        async function fetchData() {\n            await fetch('http://localhost:8000/people/'+userId)\n            .then((res)=>res.json())\n            .then((data)=> {\n                console.log(\"data*************\", data)\n                // set values here\n                setPeople(data);\n                setName(data.name);\n                setContactNo(data.contactNo);\n                setEmailId(data.emailId);\n                setAddress(data.address);\n\n                setUniversity(data.education[0].institution)\n                setStartYear(data.education[0].startYear);\n                setEndYear(data.education[0].endYear);\n                setDegree(data.education[0].degree);\n\n                setInstitution(data.workExperience[0].institution);\n                setWorkEndYear(data.workExperience[0].workStartYear);\n                setWorkEndYear(data.workExperience[0].workEndYear);\n                setTitle(data.workExperience[0].title);\n            })\n        }\n        fetchData();\n    }, [])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let tempEducation = education;\n        tempEducation.push({institution:university, startYear, endYear, degree});\n\n        let tempExperience = workExperience;\n        tempExperience.push({ institution, startYear:workStartYear, endYear:workEndYear, title });\n\n        setEducation(tempEducation);\n        setExperience(tempExperience);\n\n        const user = { name, contactNo, emailId, address, education, workExperience };\n        setIsPending(true);\n\n        fetch('http://localhost:8000/people'+userId, {\n            method: 'PUT',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user)\n        }).then(() => {\n            setIsPending(false);\n            history.push('/');\n        })\n    }\n\n    return(\n        <div className=\"edit\">\n            <h2>Edit User Profile</h2>\n            <form onSubmit={handleSubmit}>\n                <label>User Name:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ name }\n                    onChange={(e) => setName(e.target.value)} \n                />\n                <label>Contact Number:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ contactNo }\n                    onChange={(e) => setContactNo(e.target.value)}\n                />\n                <label>Email ID:</label>\n                <input\n                    type=\"email\"\n                    required\n                    value={ emailId }\n                    onChange={(e) => setEmailId(e.target.value)}\n                />\n                <label>Address:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ address }\n                    onChange={(e) => setAddress(e.target.value)}\n                />\n                <h4>Education:</h4>\n                <label>University:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ university }\n                    onChange={(e) => setUniversity(e.target.value)}\n                />\n                <label>Start Year:</label>\n                <input\n                    type=\"number\"\n                    placeholder=\"YYYY\"\n                    min=\"1950\"\n                    max=\"2021\"\n                    required\n                    value={ startYear }\n                    onChange={(e) => setStartYear(e.target.value)}\n                />\n                <label>End Year:</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"YYYY or Present\"\n                    required\n                    value={ endYear }\n                    onChange={(e) => setEndYear(e.target.value)}\n                />\n                <label>Degree:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ degree }\n                    onChange={(e) => setDegree(e.target.value)}\n                />\n                <h4>Experience:</h4>\n                <label>Institution:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ institution }\n                    onChange={(e) => setInstitution(e.target.value)}\n                />\n                 <label>Start Year:</label>\n                <input\n                    type=\"number\"\n                    placeholder=\"YYYY\"\n                    min=\"1950\"\n                    max=\"2021\"\n                    required\n                    value={ workStartYear }\n                    onChange={(e) => setWorkStartYear(e.target.value)}\n                />\n\n                <label>End Year:</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"YYYY or Present\"\n                    required\n                    value={ workEndYear }\n                    onChange={(e) => setWorkEndYear(e.target.value)}\n                />\n\n                <label>Title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ title }\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n\n                { !isPending && <button className=\"button-edit\">Edit User</button> }\n                { isPending && <button className=\"button-edit\" disabled>Editing...</button> }\n\n            </form>\n        </div>\n    );\n}\n\nexport default EditUser;"]},"metadata":{},"sourceType":"module"}