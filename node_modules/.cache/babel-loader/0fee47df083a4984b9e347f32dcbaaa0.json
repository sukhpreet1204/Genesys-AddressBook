{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/address-book/src/components/Create.js\",\n    _s = $RefreshSig$();\n\nimport { queryAllByTitle } from \"@testing-library/dom\";\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport \"../scss/create.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [contactNo, setContactNo] = useState('');\n  const [emailId, setEmailId] = useState('');\n  const [address, setAddress] = useState('');\n  const [education, setEducation] = useState([]);\n  const [experience, setExperience] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const user = {\n      name,\n      contactNo,\n      emailId,\n      address,\n      education,\n      experience\n    };\n    const education = {\n      university,\n      startYear,\n      endYear,\n      degree\n    };\n    const experience = {\n      institution,\n      workStartYear,\n      workEndYear,\n      title\n    };\n    setIsPending(true);\n    fetch('http://localhost:8000/people', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user, education, experience)\n    }).then(() => {\n      setIsPending(false);\n      history.push('/');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a new User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contact Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: contactNo,\n        onChange: e => setContactNo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        value: emailId,\n        onChange: e => setEmailId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Education:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"University:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: university,\n        onChange: e => setEducation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: startYear,\n        onChange: e => setEducation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: endYear,\n        onChange: e => setEducation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Degree:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: degree,\n        onChange: e => setEducation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Institution:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: institution,\n        onChange: e => setExperience(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: workStartYear,\n        onChange: e => setExperience(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: workEndYear,\n        onChange: e => setExperience(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setExperience(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Creating...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"3Co2h+gY4MpLJZGMKCbLlLJytE4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/components/Create.js"],"names":["queryAllByTitle","useState","useHistory","Create","name","setName","contactNo","setContactNo","emailId","setEmailId","address","setAddress","education","setEducation","experience","setExperience","isPending","setIsPending","history","handleSubmit","e","preventDefault","user","university","startYear","endYear","degree","institution","workStartYear","workEndYear","title","fetch","method","headers","body","JSON","stringify","then","push","target","value"],"mappings":"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","sourcesContent":["import { queryAllByTitle } from \"@testing-library/dom\";\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport \"../scss/create.scss\";\n\n\nconst Create = () => {\n    const [name, setName] = useState('');\n    const [contactNo, setContactNo] = useState('');\n    const [emailId, setEmailId] = useState('');\n    const [address, setAddress] = useState('');\n    const [education, setEducation] = useState([]);\n    const [experience, setExperience] = useState([]);\n\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const user = { name, contactNo, emailId, address, education, experience };\n        const education = { university, startYear, endYear, degree };\n        const experience = { institution, workStartYear, workEndYear, title };\n        \n        setIsPending(true);\n\n        fetch('http://localhost:8000/people', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user, education, experience)\n        }).then(() => {\n            setIsPending(false);\n            history.push('/');\n        })\n    }\n\n    return ( \n        <div className=\"create\">\n            <h2>Create a new User</h2>\n            <form onSubmit={handleSubmit}>  \n                <label>User Name:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ name }\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <label>Contact Number:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ contactNo }\n                    onChange={(e) => setContactNo(e.target.value)}\n                />\n                <label>Email ID:</label>\n                <input\n                    type=\"email\"\n                    required\n                    value={ emailId }\n                    onChange={(e) => setEmailId(e.target.value)}\n                />\n                <label>Address:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ address }\n                    onChange={(e) => setAddress(e.target.value)}\n                />\n                <h4>Education:</h4>\n                <label>University:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ university }\n                    onChange={(e) => setEducation(e.target.value)}\n                />\n                <label>Start Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ startYear }\n                    onChange={(e) => setEducation(e.target.value)}\n                />\n                <label>End Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ endYear }\n                    onChange={(e) => setEducation(e.target.value)}\n                />\n                <label>Degree:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ degree }\n                    onChange={(e) => setEducation(e.target.value)}\n                />\n\n                <h4>Experience:</h4>\n                <label>Institution:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ institution }\n                    onChange={(e) => setExperience(e.target.value)}\n                />\n\n                <label>Start Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ workStartYear }\n                    onChange={(e) => setExperience(e.target.value)}\n                />\n\n                <label>End Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ workEndYear }\n                    onChange={(e) => setExperience(e.target.value)}\n                />\n\n                <label>Title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ title }\n                    onChange={(e) => setExperience(e.target.value)}\n                />\n\n\n                \n\n                \n                { !isPending && <button>Create User</button> }\n                { isPending && <button disabled>Creating...</button> }\n                \n            </form>\n        </div>\n     );\n}\n \nexport default Create;"]},"metadata":{},"sourceType":"module"}