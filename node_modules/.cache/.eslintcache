[{"/Users/supreetsingh/address-book/src/index.js":"1","/Users/supreetsingh/address-book/src/reportWebVitals.js":"2","/Users/supreetsingh/address-book/src/App.js":"3","/Users/supreetsingh/address-book/src/api/useFetch.js":"4","/Users/supreetsingh/address-book/src/components/Navbar/Navbar.js":"5","/Users/supreetsingh/address-book/src/components/HomePage/Home.js":"6","/Users/supreetsingh/address-book/src/components/CreateUser/Create.js":"7","/Users/supreetsingh/address-book/src/components/EditUser/EditUser.js":"8","/Users/supreetsingh/address-book/src/components/UserList/UserList.js":"9","/Users/supreetsingh/address-book/src/components/UserDetails/UserDetails.js":"10","/Users/supreetsingh/address-book/src/components/ProfilePicture/ProfilePicture.js":"11","/Users/supreetsingh/address-book/src/utils/checkYearValidation.js":"12","/Users/supreetsingh/address-book/src/utils/formValidation.js":"13","/Users/supreetsingh/Genesys-AddressBook/src/index.js":"14","/Users/supreetsingh/Genesys-AddressBook/src/reportWebVitals.js":"15","/Users/supreetsingh/Genesys-AddressBook/src/App.js":"16","/Users/supreetsingh/Genesys-AddressBook/src/components/Navbar/Navbar.js":"17","/Users/supreetsingh/Genesys-AddressBook/src/components/HomePage/Home.js":"18","/Users/supreetsingh/Genesys-AddressBook/src/components/EditUser/EditUser.js":"19","/Users/supreetsingh/Genesys-AddressBook/src/components/CreateUser/Create.js":"20","/Users/supreetsingh/Genesys-AddressBook/src/components/UserDetails/UserDetails.js":"21","/Users/supreetsingh/Genesys-AddressBook/src/components/UserList/UserList.js":"22","/Users/supreetsingh/Genesys-AddressBook/src/api/useFetch.js":"23","/Users/supreetsingh/Genesys-AddressBook/src/utils/formValidation.js":"24","/Users/supreetsingh/Genesys-AddressBook/src/utils/checkYearValidation.js":"25","/Users/supreetsingh/Genesys-AddressBook/src/components/ProfilePicture/ProfilePicture.js":"26"},{"size":500,"mtime":1624043690000,"results":"27","hashOfConfig":"28"},{"size":388,"mtime":1624148531000,"results":"29","hashOfConfig":"28"},{"size":720,"mtime":1624386662000,"results":"30","hashOfConfig":"28"},{"size":1001,"mtime":1624535766000,"results":"31","hashOfConfig":"28"},{"size":384,"mtime":1624470307000,"results":"32","hashOfConfig":"28"},{"size":895,"mtime":1624388370000,"results":"33","hashOfConfig":"28"},{"size":9948,"mtime":1624532938000,"results":"34","hashOfConfig":"28"},{"size":10918,"mtime":1624534058000,"results":"35","hashOfConfig":"28"},{"size":1706,"mtime":1624524898000,"results":"36","hashOfConfig":"28"},{"size":5770,"mtime":1624530995000,"results":"37","hashOfConfig":"28"},{"size":892,"mtime":1624439014000,"results":"38","hashOfConfig":"28"},{"size":154,"mtime":1624531243000,"results":"39","hashOfConfig":"28"},{"size":3012,"mtime":1624532826000,"results":"40","hashOfConfig":"28"},{"size":500,"mtime":1624043690000,"results":"41","hashOfConfig":"42"},{"size":388,"mtime":1624148531000,"results":"43","hashOfConfig":"42"},{"size":720,"mtime":1624386662000,"results":"44","hashOfConfig":"42"},{"size":384,"mtime":1624470307000,"results":"45","hashOfConfig":"42"},{"size":895,"mtime":1624388370000,"results":"46","hashOfConfig":"42"},{"size":10918,"mtime":1624534058000,"results":"47","hashOfConfig":"42"},{"size":9948,"mtime":1624532938000,"results":"48","hashOfConfig":"42"},{"size":5770,"mtime":1624530995000,"results":"49","hashOfConfig":"42"},{"size":1706,"mtime":1624524898000,"results":"50","hashOfConfig":"42"},{"size":1001,"mtime":1624535766000,"results":"51","hashOfConfig":"42"},{"size":3012,"mtime":1624532826000,"results":"52","hashOfConfig":"42"},{"size":154,"mtime":1624531243000,"results":"53","hashOfConfig":"42"},{"size":892,"mtime":1624439014000,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"18wdpkj",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"151uf6r",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/supreetsingh/address-book/src/index.js",[],["111","112"],"/Users/supreetsingh/address-book/src/reportWebVitals.js",[],"/Users/supreetsingh/address-book/src/App.js",[],"/Users/supreetsingh/address-book/src/api/useFetch.js",[],"/Users/supreetsingh/address-book/src/components/Navbar/Navbar.js",[],"/Users/supreetsingh/address-book/src/components/HomePage/Home.js",[],"/Users/supreetsingh/address-book/src/components/CreateUser/Create.js",[],"/Users/supreetsingh/address-book/src/components/EditUser/EditUser.js",["113","114","115"],"import { useHistory, useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport  formValidation  from \"../../utils/formValidation\";\nimport \"../../components/EditUser/editUser.scss\";\n\nconst EditUser = () => {\n    const { userId } = useParams();\n\n    const [people, setPeople] = useState({})\n    const [isPending, setIsPending] = useState(false)\n    \n    let [name, setName] = useState(\"\");\n    let [dob, setDob] = useState(\"\");\n    let [contactNo, setContactNo] = useState(\"\");\n    let [emailId, setEmailId] = useState(\"\");\n    let [address, setAddress] = useState(\"\");\n\n    let [facebookUrl, setFacebookUrl] = useState(\"\");\n    let [linkedInUrl, setLinkedInUrl] = useState(\"\");\n    let [twitterUrl, setTwitterUrl] = useState(\"\");\n\n    let [university, setUniversity] = useState(\"\");\n    let [startYear, setStartYear] = useState(\"\");\n    let [endYear, setEndYear] = useState(\"\");\n    let [degree, setDegree] = useState(\"\");\n\n    let [institution, setInstitution] = useState(\"\");\n    let [workStartYear, setWorkStartYear] = useState(\"\");\n    let [workEndYear, setWorkEndYear] = useState(\"\");\n    let [title, setTitle] = useState(\"\");\n\n    let [education, setEducation] = useState([]);\n    let [workExperience, setExperience] = useState([]);\n    \n    const history = useHistory();\n\n    const [nameErr, setNameErr] = useState({});\n    const [contactNoErr, setContactNoErr] = useState({});\n    const [emailIdErr, setEmailIdErr] = useState({});\n    const [addressErr, setAddressErr] = useState({});\n    const [universityErr, setUniversityErr] = useState({});\n    const [degreeErr, setDegreeErr] = useState({});\n    const [institutionErr, setInstitutionErr] = useState({});\n    const [titleErr, setTitleErr] = useState({});\n    const [educationYearErr, setEducationYearErr] = useState({});\n    const [experienceYearErr, setExperienceYearErr] = useState({});\n\n\n    useEffect(()=> {\n        async function fetchData() {\n            await fetch('http://localhost:8080/people/'+userId)\n            .then((res)=>res.json())\n            .then((data)=> {\n                setPeople(data);\n                setName(data.name);\n                setDob(data.dob);\n                setContactNo(data.contactNo);\n                setEmailId(data.emailId);\n                setAddress(data.address);\n\n                setFacebookUrl(data.facebookUrl);\n                setLinkedInUrl(data.linkedInUrl);\n                setTwitterUrl(data.twitterUrl);\n\n                setUniversity(data.education[0].institution)\n                setStartYear(data.education[0].startYear);\n                setEndYear(data.education[0].endYear);\n                setDegree(data.education[0].degree);\n\n                setInstitution(data.workExperience[0].institution);\n                setWorkStartYear(data.workExperience[0].startYear);\n                setWorkEndYear(data.workExperience[0].endYear);\n                setTitle(data.workExperience[0].title);\n            })\n        }\n        fetchData();\n    }, [])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const {nameErr,\n            contactNoErr,\n            emailIdErr,\n            addressErr,\n            universityErr,\n            degreeErr,\n            institutionErr,\n            titleErr,\n            educationYearErr,\n            experienceYearErr,\n            isValid }= formValidation(name, contactNo, emailId, address, university, degree, startYear, endYear, institution, workStartYear, workEndYear, title);\n\n\n\n        if(!isValid){\n            setNameErr(nameErr);\n            setContactNoErr(contactNoErr);\n            setEmailIdErr(emailIdErr);\n            setAddressErr(addressErr);\n            setUniversityErr(universityErr);\n            setDegreeErr(degreeErr);\n            setInstitutionErr(institutionErr);\n            setTitleErr(titleErr);\n            setEducationYearErr(educationYearErr);\n            setExperienceYearErr(experienceYearErr);\n\n        }\n\n        if(isValid){\n\n        let tempEducation = education;\n        tempEducation.push({institution:university, startYear, endYear, degree});\n\n        let tempExperience = workExperience;\n        tempExperience.push({ institution, startYear:workStartYear, endYear:workEndYear, title });\n\n        setEducation(tempEducation);\n        setExperience(tempExperience);\n\n        const user = { name, dob, contactNo, emailId, address, facebookUrl, linkedInUrl, twitterUrl, education, workExperience };\n        setIsPending(true);\n\n        fetch('http://localhost:8080/people/'+userId, {\n            method: 'PUT',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user)\n        }).then(() => {\n            setIsPending(false);\n            history.push('/');\n        })\n\n    }\n    }\n\n    return(\n        <div className=\"edit\">\n            <h2>Edit User Profile</h2>\n            <form onSubmit={handleSubmit}>\n                <label>User Name:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ name }\n                    onChange={(e) => setName(e.target.value)} \n                />\n                {Object.keys(nameErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{nameErr[key]}</div>\n                })}\n\n                <label>Date Of Birth:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ dob }\n                    onChange={(e) => setDob(e.target.value)} \n                />\n\n                <label>Contact Number:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ contactNo }\n                    onChange={(e) => setContactNo(e.target.value)}\n                />\n                 {Object.keys(contactNoErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{contactNoErr[key]}</div>\n                })}\n\n                <label>Email ID:</label>\n                <input\n                    type=\"email\"\n                    required\n                    value={ emailId }\n                    onChange={(e) => setEmailId(e.target.value)}\n                />\n                {Object.keys(emailIdErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{emailIdErr[key]}</div>\n                })}\n\n                <label>Address:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ address }\n                    onChange={(e) => setAddress(e.target.value)}\n                />\n                {Object.keys(addressErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{addressErr[key]}</div>\n                })}\n\n                <h4>Social Media Profile:</h4>\n                <label>Facebook:</label>\n                <input\n                    type=\"url\"\n                    value={ facebookUrl }\n                    onChange={(e) => setFacebookUrl(e.target.value)}\n                />\n\n                <label>LinkedIn:</label>\n                <input\n                    type=\"url\"\n                    value={ linkedInUrl }\n                    onChange={(e) => setLinkedInUrl(e.target.value)}\n                />\n\n                <label>Twitter:</label>\n                <input\n                    type=\"url\"\n                    value={ twitterUrl }\n                    onChange={(e) => setTwitterUrl(e.target.value)}\n                />\n\n                <h4>Education:</h4>\n                <label>University:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ university }\n                    onChange={(e) => setUniversity(e.target.value)}\n                />\n                {Object.keys(universityErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{universityErr[key]}</div>\n                })}\n\n\n                <label>Start Year:</label>\n                <input\n                    type=\"number\"\n                    placeholder=\"YYYY\"\n                    min=\"1950\"\n                    max=\"2021\"\n                    required\n                    value={ startYear }\n                    onChange={(e) => setStartYear(e.target.value)}\n                />\n                {Object.keys(educationYearErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{educationYearErr[key]}</div>\n                })}\n\n                <label>End Year:</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"YYYY or Present\"\n                    required\n                    value={ endYear }\n                    onChange={(e) => setEndYear(e.target.value)}\n                />\n                <label>Degree:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ degree }\n                    onChange={(e) => setDegree(e.target.value)}\n                />\n                {Object.keys(degreeErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{degreeErr[key]}</div>\n                })}\n\n                <h4>Experience:</h4>\n                <label>Institution:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ institution }\n                    onChange={(e) => setInstitution(e.target.value)}\n                />\n        \n                 <label>Start Year:</label>\n                <input\n                    type=\"number\"\n                    placeholder=\"YYYY\"\n                    min=\"1950\"\n                    max=\"2021\"\n                    required\n                    value={ workStartYear }\n                    onChange={(e) => setWorkStartYear(e.target.value)}\n                />\n                {Object.keys(experienceYearErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{experienceYearErr[key]}</div>\n                })}\n        \n                <label>End Year:</label>\n                <input\n                    type=\"text\"\n                    placeholder=\"YYYY or Present\"\n                    required\n                    value={ workEndYear }\n                    onChange={(e) => setWorkEndYear(e.target.value)}\n                />\n\n                <label>Title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ title }\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                {Object.keys(titleErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{titleErr[key]}</div>\n                })}\n\n                { !isPending && <button className=\"button-edit\">Save</button> }\n                { isPending && <button className=\"button-edit\" disabled>Saving...</button> }\n\n            </form>\n        </div>\n    );\n}\n\nexport default EditUser;","/Users/supreetsingh/address-book/src/components/UserList/UserList.js",["116"],"/Users/supreetsingh/address-book/src/components/UserDetails/UserDetails.js",["117"],"/Users/supreetsingh/address-book/src/components/ProfilePicture/ProfilePicture.js",[],"/Users/supreetsingh/address-book/src/utils/checkYearValidation.js",[],"/Users/supreetsingh/address-book/src/utils/formValidation.js",[],"/Users/supreetsingh/Genesys-AddressBook/src/index.js",[],"/Users/supreetsingh/Genesys-AddressBook/src/reportWebVitals.js",[],"/Users/supreetsingh/Genesys-AddressBook/src/App.js",[],"/Users/supreetsingh/Genesys-AddressBook/src/components/Navbar/Navbar.js",[],"/Users/supreetsingh/Genesys-AddressBook/src/components/HomePage/Home.js",[],"/Users/supreetsingh/Genesys-AddressBook/src/components/EditUser/EditUser.js",["118","119","120"],"/Users/supreetsingh/Genesys-AddressBook/src/components/CreateUser/Create.js",[],"/Users/supreetsingh/Genesys-AddressBook/src/components/UserDetails/UserDetails.js",["121"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport avatar from \"../../assets/avatar.png\";\nimport Modal from \"react-modal\";\nimport { FaUserEdit , FaUniversity, FaBirthdayCake, FaFacebook } from 'react-icons/fa';\nimport { AiFillTwitterCircle } from 'react-icons/ai';\nimport { MdDelete, MdEmail, MdWork } from 'react-icons/md';\nimport { GiPhone } from 'react-icons/gi';\nimport { ImAddressBook } from 'react-icons/im';\nimport { IoIosPeople, IoLogoLinkedin } from 'react-icons/io';\nimport ReactTooltip from \"react-tooltip\";\nimport \"../../components/UserDetails/userDetails.scss\";\n\nconst UserDetails = ({userData}) => {\n\n    const history = useHistory();\n\n    const renderEducation = (data) => {\n        return(<div>\n            {data.map((edu, index)=> {\n                return <>\n                <section className=\"education-details\">\n                <div className=\"year\">{`${edu.startYear}-${edu.endYear}`}</div>\n                <div className=\"college-course\">\n                    <h4>{edu.institution}</h4>\n                    <p>{edu.degree}</p>\n                </div>\n                </section>\n                </>\n            })}\n        </div>)\n    }\n\n    const renderExperience = (data) => {\n        return(<div>\n            {data.map((edu, index)=> {\n                return <>\n                <section className=\"experience-details\">\n                <div className=\"year\">{`${edu.startYear}-${edu.endYear? edu.endYear:'Present'}`}</div>\n                <div className=\"company-details\">\n                    <h4>{edu.institution}</h4>\n                    <p>{edu.title}</p>\n                </div>\n                </section>\n                </>\n            })}\n        </div>)\n    }\n\n    Modal.setAppElement(\"#root\");\n    const [isOpen, setIsOpen] = useState(false);\n\n    function toggleModal() {\n        setIsOpen(!isOpen);\n    }\n\n    const handleDelete = () => {\n        fetch('http://localhost:8080/people/' + userData.id, {\n            method: 'DELETE'\n        }).then(() => {\n            setIsOpen(!isOpen);\n            history.push('/');\n        })\n}\n\n    return ( \n        <div className=\"user-details\">\n            { userData && (\n               <><section className=\"personal-details\">\n                    <article className=\"profile-picture\">\n                        <img className=\"avatar\" \n                            src={avatar} alt={\"Profile picture\"}\n                        />\n                        \n                        \n                    </article>\n                    <article className=\"personal-data\">\n                        <h2>{ userData.name }</h2>\n                        <p>{<FaBirthdayCake className=\"dobIcon\" />}{ userData.dob }</p>\n                        <p>{<GiPhone className=\"phoneIcon\" />}{ userData.contactNo }</p>\n                        <p>{<MdEmail className=\"emailIcon\" />}{ userData.emailId }</p>\n                        <p>{<ImAddressBook className=\"addressIcon\"/>}{ userData.address }</p>\n                    </article>\n                    <article>\n                       \n                        <Link className=\"editButton\" to={`/edit/${userData.id}`} data-tip data-for=\"editTip\" params={{userId : userData.id}}><FaUserEdit /></Link> \n                        <ReactTooltip className=\"editToolTip\" id=\"editTip\" place=\"bottom\" effect=\"solid\">\n                            Edit User\n                        </ReactTooltip> \n                        <button className=\"deleteButton\" data-tip data-for=\"deleteTip\" onClick={toggleModal}><MdDelete /></button> \n                        <ReactTooltip className=\"deleteToolTip\" id=\"deleteTip\" place=\"bottom\" effect=\"solid\">\n                            Delete User\n                        </ReactTooltip> \n                    </article>\n                    <Modal\n                            isOpen={isOpen}\n                            onRequestClose={toggleModal}\n                            contentLabel=\"Delete dialog\"\n                            className=\"deleteModal\"\n                            overlayClassName=\"deleteOverlay\"\n                            closeTimeoutMS={500}\n                    >\n                            <div>Are you sure you want to delete the User?</div>\n                            <button onClick={handleDelete}>Yes</button>\n                            <button onClick={toggleModal}>No</button>\n                            \n                    </Modal>\n                </section>\n                {userData.facebookUrl || userData.linkedInUrl || userData.twitterUrl ?\n                <section className=\"social-media\">\n                    <h2>{<IoIosPeople className=\"socialMediaIcon\" />}SOCIAL MEDIA PROFILE</h2>\n                    {userData.facebookUrl ? \n                    <p>{<FaFacebook className=\"facebookIcon\" />}{ userData.facebookUrl }</p>: \"\" }\n                    {userData.linkedInUrl ? \n                    <p>{<IoLogoLinkedin className=\"linkedInIcon\" />}{ userData.linkedInUrl}</p>: \"\"}\n                    {userData.twitterUrl ?\n                    <p>{<AiFillTwitterCircle className=\"twitterIcon\"/>}{ userData.twitterUrl}</p>: \"\"}\n                </section>: \"\" }\n                \n\n                <section className=\"education\">\n                    <h2>{<FaUniversity className=\"educationIcon\" />}EDUCATION</h2>\n                    \n                    {renderEducation(userData.education)}\n                    \n\n                </section>\n                <section className=\"experience\">\n                    <h2>{<MdWork className=\"workIcon\"/>}EXPERIENCE</h2>\n                    {renderExperience(userData.workExperience)}\n                </section>\n                </>\n            )}\n        </div>\n     );\n}\n\nexport default UserDetails;","/Users/supreetsingh/Genesys-AddressBook/src/components/UserList/UserList.js",["122"],"import React, {useEffect, useState}from \"react\";\nimport {getRandomColor, createImageFromInitials} from \"../ProfilePicture/ProfilePicture\";\nimport \"../../components/UserList/userList.scss\";\n\nconst UserList = ({people, selectedUser}) => {\n    const [alphabetOrder, setAlphabetOrder] = useState({})\n    people.sort((a,b)=> {\n        if(a.name>b.name)\n        return 1;\n        else{\n            return -1;\n        }\n    })\n\n    useEffect(()=> {\n        let dataObj = {};\n        people.forEach(element => {\n            let tempElement = element;\n            tempElement[\"color\"] = getRandomColor();\n            if(dataObj[element.name[0]]){\n                dataObj[element.name[0]].push(tempElement)\n            }else {\n                dataObj[element.name[0]] = [tempElement]\n            }\n        });\n        setAlphabetOrder(dataObj)\n    },[])\n\n    \n    \n\n    const selectUserData = (user) => {\n        selectedUser(user)\n    }\n    return ( \n        <div className=\"user-list\">\n            {Object.keys(alphabetOrder).map(alphabets=> \n                <>\n                <details>\n                <summary>{alphabets.toUpperCase()}</summary>\n                {alphabetOrder[alphabets].map(people=> {\n                    return (\n                    <div onClick={()=>selectUserData(people)} className=\"user-preview\" key={people.id}>\n                        <div className=\"profileImage\">{createImageFromInitials(people.name,people.color)}\n                        <span className=\"nameDisplay\">{people.name}</span>\n                       </div>\n                    </div>\n                    )})\n                }</details>\n            </>   \n            )}\n        </div>\n     );\n}\n \nexport default UserList;","/Users/supreetsingh/Genesys-AddressBook/src/api/useFetch.js",[],"/Users/supreetsingh/Genesys-AddressBook/src/utils/formValidation.js",[],"/Users/supreetsingh/Genesys-AddressBook/src/utils/checkYearValidation.js",[],"/Users/supreetsingh/Genesys-AddressBook/src/components/ProfilePicture/ProfilePicture.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":9,"column":12,"nodeType":"129","messageId":"130","endLine":9,"endColumn":18},{"ruleId":"127","severity":1,"message":"131","line":43,"column":12,"nodeType":"129","messageId":"130","endLine":43,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":77,"column":8,"nodeType":"134","endLine":77,"endColumn":10,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":27,"column":7,"nodeType":"134","endLine":27,"endColumn":9,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":72,"column":25,"nodeType":"140","endLine":74,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":9,"column":12,"nodeType":"129","messageId":"130","endLine":9,"endColumn":18},{"ruleId":"127","severity":1,"message":"131","line":43,"column":12,"nodeType":"129","messageId":"130","endLine":43,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":77,"column":8,"nodeType":"134","endLine":77,"endColumn":10,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"139","line":72,"column":25,"nodeType":"140","endLine":74,"endColumn":27},{"ruleId":"132","severity":1,"message":"136","line":27,"column":7,"nodeType":"134","endLine":27,"endColumn":9,"suggestions":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'people' is assigned a value but never used.","Identifier","unusedVar","'institutionErr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["145"],"React Hook useEffect has a missing dependency: 'people'. Either include it or remove the dependency array.",["146"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["147"],["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"149","fix":"153"},{"desc":"151","fix":"154"},"Update the dependencies array to be: [userId]",{"range":"155","text":"156"},"Update the dependencies array to be: [people]",{"range":"157","text":"158"},{"range":"159","text":"156"},{"range":"160","text":"158"},[2988,2990],"[userId]",[840,842],"[people]",[2988,2990],[840,842]]