{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/address-book/src/components/Create.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport \"../scss/create.scss\";\nimport { TiDocumentAdd } from \"react-icons/ti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [contactNo, setContactNo] = useState('');\n  const [emailId, setEmailId] = useState('');\n  const [address, setAddress] = useState('');\n  const [university, setUniversity] = useState('');\n  const [startYear, setStartYear] = useState('');\n  const [endYear, setEndYear] = useState('');\n  const [degree, setDegree] = useState('');\n  const [institution, setInstitution] = useState('');\n  const [workStartYear, setWorkStartYear] = useState('');\n  const [workEndYear, setWorkEndYear] = useState('');\n  const [title, setTitle] = useState('');\n  const [education, setEducation] = useState([]);\n  const [workExperience, setExperience] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n  const [nameErr, setNameErr] = useState({});\n  const [contactNoErr, setContactNoErr] = useState({});\n  const [emailIdErr, setEmailIdErr] = useState({});\n  const [addressErr, setAddressErr] = useState({});\n  const [universityErr, setUniversityErr] = useState({});\n  const [degreeErr, setDegreeErr] = useState({});\n  const [institutionErr, setInstitutionErr] = useState({});\n  const [titleErr, setTitleErr] = useState({});\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = formValidation();\n\n    if (isValid) {\n      let tempEducation = education;\n      tempEducation.push({\n        institution: university,\n        startYear,\n        endYear,\n        degree\n      });\n      let tempExperience = workExperience;\n      tempExperience.push({\n        institution,\n        startYear: workStartYear,\n        endYear: workEndYear,\n        title\n      });\n      setEducation(tempEducation);\n      setExperience(tempExperience);\n      const user = {\n        name,\n        contactNo,\n        emailId,\n        address,\n        education,\n        workExperience\n      };\n      setIsPending(true);\n      fetch('http://localhost:8000/people', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(() => {\n        setIsPending(false);\n        history.push('/');\n      });\n    }\n  };\n\n  const formValidation = () => {\n    const nameErr = {};\n    const contactNoErr = {};\n    const emailIdErr = {};\n    const addressErr = {};\n    const universityErr = {};\n    const degreeErr = {};\n    const institutionErr = {};\n    const titleErr = {};\n    let isValid = true;\n\n    if (!name) {\n      nameErr.mandatory = \"Name is required\";\n      isValid = false;\n    }\n\n    if (name.length < 3) {\n      nameErr.nameShort = \"Name is too short\";\n      isValid = false;\n    }\n\n    if (!contactNo) {\n      contactNoErr.mandatory = \"Contact number is required\";\n      isValid = false;\n    } else {\n      var numberPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;\n\n      if (!numberPattern.test(contactNo)) {\n        contactNoErr.invalid = \"Invalid Contact Number\";\n        isValid = false;\n      }\n    }\n\n    if (!emailId) {\n      emailIdErr.mandatory = \"Email ID is required\";\n      isValid = false;\n    } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailId)) {\n      emailIdErr.invalid = \"Invalid email id.\";\n      isValid = false;\n    }\n\n    if (!address) {\n      addressErr.mandatory = \"Address is required\";\n      isValid = false;\n    }\n\n    if (!university) {\n      universityErr.mandatory = \"University is required\";\n      isValid = false;\n    }\n\n    if (!degree) {\n      degreeErr.mandatory = \"Degree is required\";\n      isValid = false;\n    }\n\n    if (!institution) {\n      institutionErr.mandatory = \"Institution is required\";\n      isValid = false;\n    }\n\n    if (!title) {\n      titleErr.mandatory = \"Title is required\";\n      isValid = false;\n    }\n\n    setNameErr(nameErr);\n    setContactNoErr(contactNoErr);\n    setEmailIdErr(emailIdErr);\n    setAddressErr(addressErr);\n    setUniversityErr(universityErr);\n    setDegreeErr(degreeErr);\n    setInstitutionErr(institutionErr);\n    setTitleErr(titleErr);\n    return isValid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a new User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), Object.keys(nameErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: nameErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contact Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: contactNo,\n        onChange: e => setContactNo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), Object.keys(contactNoErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: contactNoErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        value: emailId,\n        onChange: e => setEmailId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), Object.keys(emailIdErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: emailIdErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), Object.keys(addressErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: addressErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Education:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"University:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: university,\n        onChange: e => setUniversity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), Object.keys(universityErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: universityErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"YYYY\",\n        min: \"1950\",\n        max: \"2021\",\n        required: true,\n        value: startYear,\n        onChange: e => setStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"month\",\n        required: true,\n        value: endYear,\n        onChange: e => setEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Degree:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: degree,\n        onChange: e => setDegree(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), Object.keys(degreeErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: degreeErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(TiDocumentAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Institution:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: institution,\n        onChange: e => setInstitution(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), Object.keys(institutionErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: institutionErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"month\",\n        required: true,\n        value: workStartYear,\n        onChange: e => setWorkStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"month\",\n        required: true,\n        value: workEndYear,\n        onChange: e => setWorkEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), Object.keys(titleErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: titleErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 28\n        }, this);\n      }), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 33\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Creating...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"Vp0qwIw/pqKiOImH05wMrBq3pFc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/components/Create.js"],"names":["useState","useHistory","TiDocumentAdd","Create","name","setName","contactNo","setContactNo","emailId","setEmailId","address","setAddress","university","setUniversity","startYear","setStartYear","endYear","setEndYear","degree","setDegree","institution","setInstitution","workStartYear","setWorkStartYear","workEndYear","setWorkEndYear","title","setTitle","education","setEducation","workExperience","setExperience","isPending","setIsPending","history","nameErr","setNameErr","contactNoErr","setContactNoErr","emailIdErr","setEmailIdErr","addressErr","setAddressErr","universityErr","setUniversityErr","degreeErr","setDegreeErr","institutionErr","setInstitutionErr","titleErr","setTitleErr","handleSubmit","e","preventDefault","isValid","formValidation","tempEducation","push","tempExperience","user","fetch","method","headers","body","JSON","stringify","then","mandatory","length","nameShort","numberPattern","test","invalid","target","value","Object","keys","map","key","color"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport \"../scss/create.scss\";\nimport {TiDocumentAdd} from \"react-icons/ti\";\n\n\nconst Create = () => {\n    const [name, setName] = useState('');\n    const [contactNo, setContactNo] = useState('');\n    const [emailId, setEmailId] = useState('');\n    const [address, setAddress] = useState('');\n\n    const [university, setUniversity] = useState('');\n    const [startYear, setStartYear] = useState('');\n    const [endYear, setEndYear] = useState('');\n    const [degree, setDegree] = useState('');\n\n    const [institution, setInstitution] = useState('');\n    const [workStartYear, setWorkStartYear] = useState('');\n    const [workEndYear, setWorkEndYear] = useState('');\n    const [title, setTitle] = useState('');\n\n    const [education, setEducation] = useState([]);\n    const [workExperience, setExperience] = useState([]);\n\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n    const [nameErr, setNameErr] = useState({});\n    const [contactNoErr, setContactNoErr] = useState({});\n    const [emailIdErr, setEmailIdErr] = useState({});\n    const [addressErr, setAddressErr] = useState({});\n    const [universityErr, setUniversityErr] = useState({});\n    const [degreeErr, setDegreeErr] = useState({});\n    const [institutionErr, setInstitutionErr] = useState({});\n    const [titleErr, setTitleErr] = useState({});\n \n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const isValid = formValidation();\n\n        if(isValid){\n        let tempEducation = education;\n        tempEducation.push({institution:university, startYear, endYear, degree});\n\n        let tempExperience = workExperience;\n        tempExperience.push({ institution, startYear:workStartYear, endYear:workEndYear, title });\n\n        setEducation(tempEducation);\n        setExperience(tempExperience);\n        \n        const user = { name, contactNo, emailId, address, education, workExperience };\n        \n        setIsPending(true);\n\n        fetch('http://localhost:8000/people', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user)\n        }).then(() => {\n            setIsPending(false);\n            history.push('/');\n        })\n    }\n    }\n\n    const formValidation = () => {\n        const nameErr = {};\n        const contactNoErr = {};\n        const emailIdErr = {};\n        const addressErr = {};\n        const universityErr = {};\n        const degreeErr = {};\n        const institutionErr = {};\n        const titleErr = {};\n          let isValid = true;\n\n        if(!name){\n            nameErr.mandatory = \"Name is required\";\n            isValid = false;\n        }\n        if(name.length < 3){\n            nameErr.nameShort = \"Name is too short\";\n            isValid = false;\n        }\n\n        if(!contactNo){\n            contactNoErr.mandatory = \"Contact number is required\";\n            isValid = false;\n        }\n        else{\n            var numberPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;    \n            if (!numberPattern.test(contactNo)) {     \n                contactNoErr.invalid = \"Invalid Contact Number\"; \n                isValid = false;  \n            }    \n\n        }\n\n        if(!emailId){\n            emailIdErr.mandatory = \"Email ID is required\";\n            isValid = false;\n        }\n        else if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailId))) {       \n            emailIdErr.invalid = \"Invalid email id.\";  \n            isValid = false;  \n        } \n        \n        if(!address){\n            addressErr.mandatory = \"Address is required\";\n            isValid = false;\n        }\n\n        if(!university){\n            universityErr.mandatory = \"University is required\";\n            isValid = false;\n        }\n\n        if(!degree){\n            degreeErr.mandatory = \"Degree is required\";\n            isValid = false;\n        }\n\n        if(!institution){\n            institutionErr.mandatory = \"Institution is required\";\n            isValid = false;\n        }\n\n        if(!title){\n            titleErr.mandatory = \"Title is required\";\n            isValid = false;\n        }\n\n        setNameErr(nameErr);\n        setContactNoErr(contactNoErr);\n        setEmailIdErr(emailIdErr);\n        setAddressErr(addressErr);\n        setUniversityErr(universityErr);\n        setDegreeErr(degreeErr);\n        setInstitutionErr(institutionErr);\n        setTitleErr(titleErr);\n\n        return isValid;\n        \n\n    }\n\n    return ( \n        <div className=\"create\">\n            <h2>Create a new User</h2>\n            <form onSubmit={handleSubmit}>  \n                <label>User Name:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ name }\n                    onChange={(e) => setName(e.target.value)} \n                />\n                {Object.keys(nameErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{nameErr[key]}</div>\n                })}\n                \n                <label>Contact Number:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ contactNo }\n                    onChange={(e) => setContactNo(e.target.value)}\n                />\n                 {Object.keys(contactNoErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{contactNoErr[key]}</div>\n                })}\n\n                <label>Email ID:</label>\n                <input\n                    type=\"email\"\n                    required\n                    value={ emailId }\n                    onChange={(e) => setEmailId(e.target.value)}\n                />\n                {Object.keys(emailIdErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{emailIdErr[key]}</div>\n                })}\n\n                <label>Address:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ address }\n                    onChange={(e) => setAddress(e.target.value)}\n                />\n                {Object.keys(addressErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{addressErr[key]}</div>\n                })}\n\n                <h4>Education:</h4>\n                <label>University:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ university }\n                    onChange={(e) => setUniversity(e.target.value)}\n                />\n                {Object.keys(universityErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{universityErr[key]}</div>\n                })}\n\n                <label>Start Year:</label>\n                <input\n                    type=\"number\"\n                    placeholder=\"YYYY\"\n                    min=\"1950\"\n                    max=\"2021\"\n                    required\n                    value={ startYear }\n                    onChange={(e) => setStartYear(e.target.value)}\n                />\n                <label>End Year:</label>\n                <input\n                    type=\"month\"\n                    required\n                    value={ endYear }\n                    onChange={(e) => setEndYear(e.target.value)}\n                />\n                <label>Degree:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ degree }\n                    onChange={(e) => setDegree(e.target.value)}\n                />\n                {Object.keys(degreeErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{degreeErr[key]}</div>\n                })}\n\n                <button><TiDocumentAdd /></button>\n\n                <h4>Experience:</h4>\n                <label>Institution:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ institution }\n                    onChange={(e) => setInstitution(e.target.value)}\n                />\n                {Object.keys(institutionErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{institutionErr[key]}</div>\n                })}\n\n                <label>Start Year:</label>\n                <input\n                    type=\"month\"\n                    required\n                    value={ workStartYear }\n                    onChange={(e) => setWorkStartYear(e.target.value)}\n                />\n\n                <label>End Year:</label>\n                <input\n                    type=\"month\"\n                    required\n                    value={ workEndYear }\n                    onChange={(e) => setWorkEndYear(e.target.value)}\n                />\n\n                <label>Title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ title }\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                {Object.keys(titleErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{titleErr[key]}</div>\n                })}\n\n                { !isPending && <button>Create User</button> }\n                { isPending && <button disabled>Creating...</button> }\n                \n            </form>\n        </div>\n     );\n}\n \nexport default Create;"]},"metadata":{},"sourceType":"module"}