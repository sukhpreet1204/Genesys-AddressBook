{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  _s();\n\n  console.log(\"fromedit\", url);\n  let urlType = url.split(\"/\").pop();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null); //  const abortCtrl = new AbortController();\n\n  console.log(\"Hiii\");\n  fetch(url).then(res => {\n    if (!res.ok) {\n      throw Error('could not fetch the data for that resource');\n    }\n\n    return res.json();\n  }).then(data => {\n    console.log(\"editData\", data);\n\n    if (urlType === \"people\") {\n      data.sort((a, b) => {\n        if (a.name > b.name) return 1;else {\n          return -1;\n        }\n      });\n    }\n\n    setData(data);\n    setIsPending(false);\n    setError(null);\n  }).catch(err => {\n    if (err.name === \"AbortError\") {\n      console.log('fetch aborted');\n    } else {\n      setIsPending(false);\n      setError(err.message);\n    }\n  }); // return () => abortCtrl.abort();\n\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"Z23tQxuo1vwhnz1JJr7Qoh+Ps/M=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/api/useFetch.js"],"names":["useState","useEffect","useFetch","url","console","log","urlType","split","pop","data","setData","isPending","setIsPending","error","setError","fetch","then","res","ok","Error","json","sort","a","b","name","catch","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB;AACA,MAAIG,OAAO,GAAGH,GAAG,CAACI,KAAJ,CAAU,GAAV,EAAeC,GAAf,EAAd;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC,CALsB,CAQpB;;AACEI,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEAU,EAAAA,KAAK,CAACZ,GAAD,CAAL,CACKa,IADL,CACUC,GAAG,IAAI;AACT,QAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACP,YAAMC,KAAK,CAAC,4CAAD,CAAX;AACH;;AACD,WAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,GANL,EAOKJ,IAPL,CAOUP,IAAI,IAAI;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBI,IAAvB;;AACA,QAAGH,OAAO,KAAG,QAAb,EAAsB;AAClBG,MAAAA,IAAI,CAACY,IAAL,CAAU,CAACC,CAAD,EAAGC,CAAH,KAAQ;AACd,YAAGD,CAAC,CAACE,IAAF,GAAOD,CAAC,CAACC,IAAZ,EACA,OAAO,CAAP,CADA,KAEI;AACA,iBAAO,CAAC,CAAR;AACH;AACJ,OAND;AAOH;;AAEDd,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAtBL,EAuBKW,KAvBL,CAuBWC,GAAG,IAAI;AACV,QAAGA,GAAG,CAACF,IAAJ,KAAa,YAAhB,EAA6B;AACzBpB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KAFD,MAGI;AACAO,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACY,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GA/BL,EAXkB,CA4Cd;;AAIR,SAAO;AAAElB,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CAjDD;;GAAMX,Q;;AAmDN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n    console.log(\"fromedit\", url);\n    let urlType = url.split(\"/\").pop()\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    \n      //  const abortCtrl = new AbortController();\n        console.log(\"Hiii\");\n        \n        fetch(url)\n            .then(res => {\n                if(!res.ok){\n                    throw Error('could not fetch the data for that resource');\n                }\n                return res.json();\n            })\n            .then(data => {\n                console.log(\"editData\",data);\n                if(urlType===\"people\"){\n                    data.sort((a,b)=> {\n                        if(a.name>b.name)\n                        return 1;\n                        else{\n                            return -1;\n                        }\n                    })\n                }\n                \n                setData(data);\n                setIsPending(false);\n                setError(null);\n            })\n            .catch(err => {\n                if(err.name === \"AbortError\"){\n                    console.log('fetch aborted');\n                }\n                else{\n                    setIsPending(false);\n                    setError(err.message);\n                }     \n            })\n        \n            // return () => abortCtrl.abort();\n\n   \n\n    return { data, isPending, error }\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}