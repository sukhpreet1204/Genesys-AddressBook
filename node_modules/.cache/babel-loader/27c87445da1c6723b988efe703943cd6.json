{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCtrl = new AbortController();\n    fetch(url, {\n      signal: abortCtrl.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error('could not fetch the data for that resource');\n      }\n\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      setIsPending(false);\n      setError(err.message);\n    });\n    return () => abortCtrl.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/supreetsingh/Genesys-AddressBook/src/api/useFetch.js"],"names":["useEffect","useState","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCtrl","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","message","abort"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAC,IAAAA,KAAK,CAACT,GAAD,EAAM;AAAEU,MAAAA,MAAM,EAAEH,SAAS,CAACG;AAApB,KAAN,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACP,cAAMC,KAAK,CAAC,4CAAD,CAAX;AACH;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,KANL,EAOKJ,IAPL,CAOUV,IAAI,IAAI;AAEVC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAZL,EAaKU,KAbL,CAaWC,GAAG,IAAI;AAENb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACW,GAAG,CAACC,OAAL,CAAR;AAEP,KAlBL;AAoBK,WAAO,MAAMX,SAAS,CAACY,KAAV,EAAb;AAER,GAzBQ,EAyBN,CAACnB,GAAD,CAzBM,CAAT;AA2BA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CAjCD;;GAAMN,Q;;AAmCN,eAAeA,QAAf","sourcesContent":["import {useEffect, useState} from \"react\";\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const abortCtrl = new AbortController();\n\n        fetch(url, { signal: abortCtrl.signal })\n            .then(res => {\n                if(!res.ok){\n                    throw Error('could not fetch the data for that resource');\n                }\n                return res.json();\n            })\n            .then(data => {\n                \n                setData(data);\n                setIsPending(false);\n                setError(null);\n            })\n            .catch(err => {\n                \n                    setIsPending(false);\n                    setError(err.message);\n                   \n            })\n        \n             return () => abortCtrl.abort();\n\n    }, [url]);\n\n    return { data, isPending, error }\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}