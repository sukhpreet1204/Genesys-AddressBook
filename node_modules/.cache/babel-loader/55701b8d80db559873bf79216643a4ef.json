{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/address-book/src/components/Create.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport \"../scss/create.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [name, setName] = useState('');\n  const [contactNo, setContactNo] = useState('');\n  const [emailId, setEmailId] = useState('');\n  const [address, setAddress] = useState('');\n  const [university, setUniversity] = useState('');\n  const [startYear, setStartYear] = useState('');\n  const [endYear, setEndYear] = useState('');\n  const [degree, setDegree] = useState('');\n  const [institution, setInstitution] = useState('');\n  const [workStartYear, setWorkStartYear] = useState('');\n  const [workEndYear, setWorkEndYear] = useState('');\n  const [title, setTitle] = useState('');\n  const [education, setEducation] = useState([]);\n  const [workExperience, setExperience] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n\n  const handleFormValidation = () => {\n    _s();\n\n    let [formErrors, setFormErrors] = useState({});\n    let formIsValid = true;\n\n    if (!name) {\n      formIsValid = false;\n      formErrors[\"nameError\"] = \"Name is required.\";\n    }\n\n    if (!contactNo) {\n      formIsValid = false;\n      formErrors[\"contactNoError\"] = \"Contact number is required.\";\n    } else {\n      var numberPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;\n\n      if (!numberPattern.test(contactNo)) {\n        formIsValid = false;\n        formErrors[\"contactNoError\"] = \"Invalid contact number.\";\n      }\n    }\n\n    if (!emailId) {\n      formIsValid = false;\n      formErrors[\"emailIdError\"] = \"Email id is required.\";\n    } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailId)) {\n      formIsValid = false;\n      formErrors[\"emailIdError\"] = \"Invalid email id.\";\n    }\n\n    if (!address) {\n      formIsValid = false;\n      formErrors[\"addressError\"] = \"Address is required.\";\n    }\n\n    return formIsValid;\n  };\n\n  _s(handleFormValidation, \"m+RVAT7/SNVPnaWmvQWoVS1ht3I=\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.handleFormValidation()) {\n      let tempEducation = education;\n      tempEducation.push({\n        institution: university,\n        startYear,\n        endYear,\n        degree\n      });\n      let tempExperience = workExperience;\n      tempExperience.push({\n        institution,\n        startYear: workStartYear,\n        endYear: workEndYear,\n        title\n      });\n      setEducation(tempEducation);\n      setExperience(tempExperience);\n      const user = {\n        name,\n        contactNo,\n        emailId,\n        address,\n        education,\n        workExperience\n      };\n      setIsPending(true);\n      fetch('http://localhost:8000/people', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(() => {\n        setIsPending(false);\n        history.push('/');\n      });\n    }\n  };\n\n  const {\n    nameError\n  } = this.state.formErrors;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a new User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: nameError ? ' showError' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\",\n          paddingBottom: 10\n        },\n        children: nameError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contact Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: contactNo,\n        onChange: e => setContactNo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        value: emailId,\n        onChange: e => setEmailId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Education:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"University:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: university,\n        onChange: e => setUniversity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: startYear,\n        onChange: e => setStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: endYear,\n        onChange: e => setEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Degree:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: degree,\n        onChange: e => setDegree(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Institution:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: institution,\n        onChange: e => setInstitution(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: workStartYear,\n        onChange: e => setWorkStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: workEndYear,\n        onChange: e => setWorkEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 33\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Creating...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Create, \"yLMAFxSdoV4lvyBypuUhKsENh18=\", false, function () {\n  return [useHistory];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/components/Create.js"],"names":["useState","useHistory","Create","name","setName","contactNo","setContactNo","emailId","setEmailId","address","setAddress","university","setUniversity","startYear","setStartYear","endYear","setEndYear","degree","setDegree","institution","setInstitution","workStartYear","setWorkStartYear","workEndYear","setWorkEndYear","title","setTitle","education","setEducation","workExperience","setExperience","isPending","setIsPending","history","handleFormValidation","formErrors","setFormErrors","formIsValid","numberPattern","test","handleSubmit","e","preventDefault","tempEducation","push","tempExperience","user","fetch","method","headers","body","JSON","stringify","then","nameError","state","target","value","color","paddingBottom"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,qBAAP;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACyB,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAAC2B,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC6B,cAAD,EAAiBC,aAAjB,IAAkC9B,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAAC+B,SAAD,EAAYC,YAAZ,IAA4BhC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMiC,OAAO,GAAGhC,UAAU,EAA1B;;AAEA,QAAMiC,oBAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BpC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAIqC,WAAW,GAAG,IAAlB;;AAEA,QAAG,CAAClC,IAAJ,EAAS;AACLkC,MAAAA,WAAW,GAAG,KAAd;AACAF,MAAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,mBAA1B;AACH;;AAED,QAAI,CAAC9B,SAAL,EAAgB;AACZgC,MAAAA,WAAW,GAAG,KAAd;AACAF,MAAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,6BAA/B;AACH,KAHD,MAIK;AACD,UAAIG,aAAa,GAAG,sDAApB;;AACA,UAAI,CAACA,aAAa,CAACC,IAAd,CAAmBlC,SAAnB,CAAL,EAAoC;AAChCgC,QAAAA,WAAW,GAAG,KAAd;AACAF,QAAAA,UAAU,CAAC,gBAAD,CAAV,GAA+B,yBAA/B;AACH;AACJ;;AAED,QAAI,CAAC5B,OAAL,EAAc;AACV8B,MAAAA,WAAW,GAAG,KAAd;AACAF,MAAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,uBAA7B;AACH,KAHD,MAIK,IAAI,CAAE,gDAAgDI,IAAhD,CAAqDhC,OAArD,CAAN,EAAsE;AAEvE8B,MAAAA,WAAW,GAAG,KAAd;AACAF,MAAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,mBAA7B;AACH;;AAED,QAAG,CAAC1B,OAAJ,EAAY;AACR4B,MAAAA,WAAW,GAAG,KAAd;AACAF,MAAAA,UAAU,CAAC,cAAD,CAAV,GAA6B,sBAA7B;AACH;;AAED,WAAOE,WAAP;AACH,GArCD;;AAtBiB,KAsBXH,oBAtBW;;AA6DjB,QAAMM,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAG,KAAKR,oBAAL,EAAH,EAA+B;AAG/B,UAAIS,aAAa,GAAGhB,SAApB;AACAgB,MAAAA,aAAa,CAACC,IAAd,CAAmB;AAACzB,QAAAA,WAAW,EAACR,UAAb;AAAyBE,QAAAA,SAAzB;AAAoCE,QAAAA,OAApC;AAA6CE,QAAAA;AAA7C,OAAnB;AAEA,UAAI4B,cAAc,GAAGhB,cAArB;AACAgB,MAAAA,cAAc,CAACD,IAAf,CAAoB;AAAEzB,QAAAA,WAAF;AAAeN,QAAAA,SAAS,EAACQ,aAAzB;AAAwCN,QAAAA,OAAO,EAACQ,WAAhD;AAA6DE,QAAAA;AAA7D,OAApB;AAEAG,MAAAA,YAAY,CAACe,aAAD,CAAZ;AACAb,MAAAA,aAAa,CAACe,cAAD,CAAb;AAEA,YAAMC,IAAI,GAAG;AAAE3C,QAAAA,IAAF;AAAQE,QAAAA,SAAR;AAAmBE,QAAAA,OAAnB;AAA4BE,QAAAA,OAA5B;AAAqCkB,QAAAA,SAArC;AAAgDE,QAAAA;AAAhD,OAAb;AAEAG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAe,MAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,QAAAA,MAAM,EAAE,MAD0B;AAElCC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFyB;AAGlCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAH4B,OAAjC,CAAL,CAIGO,IAJH,CAIQ,MAAM;AACVrB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAC,QAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACH,OAPD;AAQC;AACJ,GA5BD;;AA6BA,QAAM;AAACU,IAAAA;AAAD,MAAc,KAAKC,KAAL,CAAWpB,UAA/B;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEK,YAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAGrC,IAHZ;AAII,QAAA,QAAQ,EAAGsC,CAAD,IAAOrC,OAAO,CAACqC,CAAC,CAACe,MAAF,CAASC,KAAV,CAJ5B;AAMI,QAAA,SAAS,EAAEH,SAAS,GAAG,YAAH,GAAkB;AAN1C;AAAA;AAAA;AAAA;AAAA,cAFJ,EASiBA,SAAS,iBACN;AAAK,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,aAAa,EAAE;AAA/B,SAAZ;AAAA,kBAAkDL;AAAlD;AAAA;AAAA;AAAA;AAAA,cAVpB,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAGjD,SAHZ;AAII,QAAA,QAAQ,EAAGoC,CAAD,IAAOnC,YAAY,CAACmC,CAAC,CAACe,MAAF,CAASC,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,cAdJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqBI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAGlD,OAHZ;AAII,QAAA,QAAQ,EAAGkC,CAAD,IAAOjC,UAAU,CAACiC,CAAC,CAACe,MAAF,CAASC,KAAV;AAJ/B;AAAA;AAAA;AAAA;AAAA,cArBJ,eA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ,eA4BI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAGhD,OAHZ;AAII,QAAA,QAAQ,EAAGgC,CAAD,IAAO/B,UAAU,CAAC+B,CAAC,CAACe,MAAF,CAASC,KAAV;AAJ/B;AAAA;AAAA;AAAA;AAAA,cA5BJ,eAkCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCJ,eAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCJ,eAoCI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAG9C,UAHZ;AAII,QAAA,QAAQ,EAAG8B,CAAD,IAAO7B,aAAa,CAAC6B,CAAC,CAACe,MAAF,CAASC,KAAV;AAJlC;AAAA;AAAA;AAAA;AAAA,cApCJ,eA0CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CJ,eA2CI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAG5C,SAHZ;AAII,QAAA,QAAQ,EAAG4B,CAAD,IAAO3B,YAAY,CAAC2B,CAAC,CAACe,MAAF,CAASC,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,cA3CJ,eAiDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjDJ,eAkDI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAG1C,OAHZ;AAII,QAAA,QAAQ,EAAG0B,CAAD,IAAOzB,UAAU,CAACyB,CAAC,CAACe,MAAF,CAASC,KAAV;AAJ/B;AAAA;AAAA;AAAA;AAAA,cAlDJ,eAwDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxDJ,eAyDI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAGxC,MAHZ;AAII,QAAA,QAAQ,EAAGwB,CAAD,IAAOvB,SAAS,CAACuB,CAAC,CAACe,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,cAzDJ,eAgEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhEJ,eAiEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjEJ,eAkEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAGtC,WAHZ;AAII,QAAA,QAAQ,EAAGsB,CAAD,IAAOrB,cAAc,CAACqB,CAAC,CAACe,MAAF,CAASC,KAAV;AAJnC;AAAA;AAAA;AAAA;AAAA,cAlEJ,eAyEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzEJ,eA0EI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAGpC,aAHZ;AAII,QAAA,QAAQ,EAAGoB,CAAD,IAAOnB,gBAAgB,CAACmB,CAAC,CAACe,MAAF,CAASC,KAAV;AAJrC;AAAA;AAAA;AAAA;AAAA,cA1EJ,eAiFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjFJ,eAkFI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAGlC,WAHZ;AAII,QAAA,QAAQ,EAAGkB,CAAD,IAAOjB,cAAc,CAACiB,CAAC,CAACe,MAAF,CAASC,KAAV;AAJnC;AAAA;AAAA;AAAA;AAAA,cAlFJ,eAyFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzFJ,eA0FI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAGhC,KAHZ;AAII,QAAA,QAAQ,EAAGgB,CAAD,IAAOf,QAAQ,CAACe,CAAC,CAACe,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,cA1FJ,EAqGM,CAAC1B,SAAD,iBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArGpB,EAsGMA,SAAS,iBAAI;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtGnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8GH,CAzMD;;IAAM7B,M;UAoBcD,U;;;KApBdC,M;AA2MN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport \"../scss/create.scss\";\n\n\nconst Create = () => {\n    const [name, setName] = useState('');\n    const [contactNo, setContactNo] = useState('');\n    const [emailId, setEmailId] = useState('');\n    const [address, setAddress] = useState('');\n\n    const [university, setUniversity] = useState('');\n    const [startYear, setStartYear] = useState('');\n    const [endYear, setEndYear] = useState('');\n    const [degree, setDegree] = useState('');\n\n    const [institution, setInstitution] = useState('');\n    const [workStartYear, setWorkStartYear] = useState('');\n    const [workEndYear, setWorkEndYear] = useState('');\n    const [title, setTitle] = useState('');\n\n    const [education, setEducation] = useState([]);\n    const [workExperience, setExperience] = useState([]);\n\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n    const handleFormValidation = () => {\n        let [formErrors, setFormErrors] = useState({});\n        let formIsValid = true;  \n        \n        if(!name){\n            formIsValid = false;\n            formErrors[\"nameError\"] = \"Name is required.\"; \n        }\n\n        if (!contactNo) {    \n            formIsValid = false;    \n            formErrors[\"contactNoError\"] = \"Contact number is required.\";    \n        }    \n        else {    \n            var numberPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;    \n            if (!numberPattern.test(contactNo)) {    \n                formIsValid = false;    \n                formErrors[\"contactNoError\"] = \"Invalid contact number.\";    \n            }    \n        }    \n\n        if (!emailId) {    \n            formIsValid = false;    \n            formErrors[\"emailIdError\"] = \"Email id is required.\";    \n        }    \n        else if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailId))) {    \n    \n            formIsValid = false;    \n            formErrors[\"emailIdError\"] = \"Invalid email id.\";    \n        }  \n        \n        if(!address){\n            formIsValid = false;\n            formErrors[\"addressError\"] = \"Address is required.\"; \n        }\n\n        return formIsValid;\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(this.handleFormValidation()){\n\n        \n        let tempEducation = education;\n        tempEducation.push({institution:university, startYear, endYear, degree});\n\n        let tempExperience = workExperience;\n        tempExperience.push({ institution, startYear:workStartYear, endYear:workEndYear, title });\n\n        setEducation(tempEducation);\n        setExperience(tempExperience);\n        \n        const user = { name, contactNo, emailId, address, education, workExperience };\n        \n        setIsPending(true);\n\n        fetch('http://localhost:8000/people', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user)\n        }).then(() => {\n            setIsPending(false);\n            history.push('/');\n        })\n        }\n    }\n    const {nameError} = this.state.formErrors;\n    return ( \n        <div className=\"create\">\n            <h2>Create a new User</h2>\n            <form onSubmit={handleSubmit}>  \n                <label>User Name:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ name }\n                    onChange={(e) => setName(e.target.value)}\n\n                    className={nameError ? ' showError' : ''} />\n                            {nameError &&    \n                                <div style={{ color: \"red\", paddingBottom: 10 }}>{nameError}</div>    \n                            }    \n                \n                <label>Contact Number:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ contactNo }\n                    onChange={(e) => setContactNo(e.target.value)}\n                />\n                <label>Email ID:</label>\n                <input\n                    type=\"email\"\n                    required\n                    value={ emailId }\n                    onChange={(e) => setEmailId(e.target.value)}\n                />\n                <label>Address:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ address }\n                    onChange={(e) => setAddress(e.target.value)}\n                />\n                <h4>Education:</h4>\n                <label>University:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ university }\n                    onChange={(e) => setUniversity(e.target.value)}\n                />\n                <label>Start Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ startYear }\n                    onChange={(e) => setStartYear(e.target.value)}\n                />\n                <label>End Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ endYear }\n                    onChange={(e) => setEndYear(e.target.value)}\n                />\n                <label>Degree:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ degree }\n                    onChange={(e) => setDegree(e.target.value)}\n                />\n\n                <h4>Experience:</h4>\n                <label>Institution:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ institution }\n                    onChange={(e) => setInstitution(e.target.value)}\n                />\n\n                <label>Start Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ workStartYear }\n                    onChange={(e) => setWorkStartYear(e.target.value)}\n                />\n\n                <label>End Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ workEndYear }\n                    onChange={(e) => setWorkEndYear(e.target.value)}\n                />\n\n                <label>Title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ title }\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n\n\n                \n\n                \n                { !isPending && <button>Create User</button> }\n                { isPending && <button disabled>Creating...</button> }\n                \n            </form>\n        </div>\n     );\n}\n \nexport default Create;"]},"metadata":{},"sourceType":"module"}