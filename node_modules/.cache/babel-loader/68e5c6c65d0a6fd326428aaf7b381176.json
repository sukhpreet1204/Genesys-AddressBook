{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/address-book/src/components/Create.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport \"../scss/create.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [contactNo, setContactNo] = useState('');\n  const [emailId, setEmailId] = useState('');\n  const [address, setAddress] = useState('');\n  const [university, setUniversity] = useState('');\n  const [startYear, setStartYear] = useState('');\n  const [endYear, setEndYear] = useState('');\n  const [degree, setDegree] = useState('');\n  const [institution, setInstitution] = useState('');\n  const [workStartYear, setWorkStartYear] = useState('');\n  const [workEndYear, setWorkEndYear] = useState('');\n  const [title, setTitle] = useState('');\n  const [education, setEducation] = useState([]);\n  const [workExperience, setExperience] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n  const [nameErr, setNameErr] = useState({});\n  const [contactNoErr, setContactNoErr] = useState({});\n  const [emailIdErr, setEmailIdErr] = useState({});\n  const [addressErr, setAddressErr] = useState({});\n  const [universityErr, setUniversityErr] = useState({});\n  const [degreeErr, setDegreeErr] = useState({});\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = formValidation();\n\n    if (isValid) {\n      let tempEducation = education;\n      tempEducation.push({\n        institution: university,\n        startYear,\n        endYear,\n        degree\n      });\n      let tempExperience = workExperience;\n      tempExperience.push({\n        institution,\n        startYear: workStartYear,\n        endYear: workEndYear,\n        title\n      });\n      setEducation(tempEducation);\n      setExperience(tempExperience);\n      const user = {\n        name,\n        contactNo,\n        emailId,\n        address,\n        education,\n        workExperience\n      };\n      setIsPending(true);\n      fetch('http://localhost:8000/people', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(() => {\n        setIsPending(false);\n        history.push('/');\n      });\n    }\n  };\n\n  const formValidation = () => {\n    const nameErr = {};\n    const contactNoErr = {};\n    const emailIdErr = {};\n    const addressErr = {};\n    const universityErr = {};\n    const degreeErr = {};\n    let isValid = true;\n\n    if (!name) {\n      nameErr.mandatory = \"Name is required\";\n      isValid = false;\n    }\n\n    if (name.length < 3) {\n      nameErr.nameShort = \"Name is too short\";\n      isValid = false;\n    }\n\n    if (!contactNo) {\n      contactNoErr.mandatory = \"Contact number is required\";\n      isValid = false;\n    } else {\n      var numberPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;\n\n      if (!numberPattern.test(contactNo)) {\n        contactNoErr.invalid = \"Invalid Contact Number\";\n        isValid = false;\n      }\n    }\n\n    if (!emailId) {\n      emailIdErr.mandatory = \"Email ID is required\";\n      isValid = false;\n    } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailId)) {\n      emailIdErr.invalid = \"Invalid email id.\";\n      isValid = false;\n    }\n\n    if (!address) {\n      addressErr.mandatory = \"Address is required\";\n      isValid = false;\n    }\n\n    if (!university) {\n      universityErr.mandatory = \"University is required\";\n      isValid = false;\n    }\n\n    if (!degree) {\n      degreeErr.mandatory = \"Degree is required\";\n      isValid = false;\n    }\n\n    setNameErr(nameErr);\n    setContactNoErr(contactNoErr);\n    setEmailIdErr(emailIdErr);\n    setAddressErr(addressErr);\n    setUniversityErr(universityErr);\n    setDegreeErr(degreeErr);\n    return isValid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a new User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), Object.keys(nameErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: nameErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contact Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: contactNo,\n        onChange: e => setContactNo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), Object.keys(contactNoErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: contactNoErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        value: emailId,\n        onChange: e => setEmailId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), Object.keys(emailIdErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: emailIdErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), Object.keys(addressErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: addressErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Education:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"University:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: university,\n        onChange: e => setUniversity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), Object.keys(universityErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: universityErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: startYear,\n        onChange: e => setStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: endYear,\n        onChange: e => setEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Degree:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: degree,\n        onChange: e => setDegree(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), Object.keys(degreeErr).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: degreeErr[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Experience:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Institution:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: institution,\n        onChange: e => setInstitution(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: workStartYear,\n        onChange: e => setWorkStartYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: workEndYear,\n        onChange: e => setWorkEndYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Creating...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"MAvsZ+nnlsyK2buirGfBlJKxpYc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/components/Create.js"],"names":["useState","useHistory","Create","name","setName","contactNo","setContactNo","emailId","setEmailId","address","setAddress","university","setUniversity","startYear","setStartYear","endYear","setEndYear","degree","setDegree","institution","setInstitution","workStartYear","setWorkStartYear","workEndYear","setWorkEndYear","title","setTitle","education","setEducation","workExperience","setExperience","isPending","setIsPending","history","nameErr","setNameErr","contactNoErr","setContactNoErr","emailIdErr","setEmailIdErr","addressErr","setAddressErr","universityErr","setUniversityErr","degreeErr","setDegreeErr","handleSubmit","e","preventDefault","isValid","formValidation","tempEducation","push","tempExperience","user","fetch","method","headers","body","JSON","stringify","then","mandatory","length","nameShort","numberPattern","test","invalid","target","value","Object","keys","map","key","color"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport \"../scss/create.scss\";\n\n\nconst Create = () => {\n    const [name, setName] = useState('');\n    const [contactNo, setContactNo] = useState('');\n    const [emailId, setEmailId] = useState('');\n    const [address, setAddress] = useState('');\n\n    const [university, setUniversity] = useState('');\n    const [startYear, setStartYear] = useState('');\n    const [endYear, setEndYear] = useState('');\n    const [degree, setDegree] = useState('');\n\n    const [institution, setInstitution] = useState('');\n    const [workStartYear, setWorkStartYear] = useState('');\n    const [workEndYear, setWorkEndYear] = useState('');\n    const [title, setTitle] = useState('');\n\n    const [education, setEducation] = useState([]);\n    const [workExperience, setExperience] = useState([]);\n\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n    const [nameErr, setNameErr] = useState({});\n    const [contactNoErr, setContactNoErr] = useState({});\n    const [emailIdErr, setEmailIdErr] = useState({});\n    const [addressErr, setAddressErr] = useState({});\n    const [universityErr, setUniversityErr] = useState({});\n    const [degreeErr, setDegreeErr] = useState({});\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const isValid = formValidation();\n\n        if(isValid){\n        let tempEducation = education;\n        tempEducation.push({institution:university, startYear, endYear, degree});\n\n        let tempExperience = workExperience;\n        tempExperience.push({ institution, startYear:workStartYear, endYear:workEndYear, title });\n\n        setEducation(tempEducation);\n        setExperience(tempExperience);\n        \n        const user = { name, contactNo, emailId, address, education, workExperience };\n        \n        setIsPending(true);\n\n        fetch('http://localhost:8000/people', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(user)\n        }).then(() => {\n            setIsPending(false);\n            history.push('/');\n        })\n    }\n    }\n\n    const formValidation = () => {\n        const nameErr = {};\n        const contactNoErr = {};\n        const emailIdErr = {};\n        const addressErr = {};\n        const universityErr = {};\n        const degreeErr = {};\n          let isValid = true;\n\n        if(!name){\n            nameErr.mandatory = \"Name is required\";\n            isValid = false;\n        }\n        if(name.length < 3){\n            nameErr.nameShort = \"Name is too short\";\n            isValid = false;\n        }\n\n        if(!contactNo){\n            contactNoErr.mandatory = \"Contact number is required\";\n            isValid = false;\n        }\n        else{\n            var numberPattern = /^(?:(?:\\\\+|0{0,2})91(\\s*[\\\\-]\\s*)?|[0]?)?[789]\\d{9}$/;    \n            if (!numberPattern.test(contactNo)) {     \n                contactNoErr.invalid = \"Invalid Contact Number\"; \n                isValid = false;  \n            }    \n\n        }\n\n        if(!emailId){\n            emailIdErr.mandatory = \"Email ID is required\";\n            isValid = false;\n        }\n        else if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailId))) {       \n            emailIdErr.invalid = \"Invalid email id.\";  \n            isValid = false;  \n        } \n        \n        if(!address){\n            addressErr.mandatory = \"Address is required\";\n            isValid = false;\n        }\n\n        if(!university){\n            universityErr.mandatory = \"University is required\";\n            isValid = false;\n        }\n\n        if(!degree){\n            degreeErr.mandatory = \"Degree is required\";\n            isValid = false;\n        }\n\n        setNameErr(nameErr);\n        setContactNoErr(contactNoErr);\n        setEmailIdErr(emailIdErr);\n        setAddressErr(addressErr);\n        setUniversityErr(universityErr);\n        setDegreeErr(degreeErr);\n        return isValid;\n        \n\n    }\n\n    return ( \n        <div className=\"create\">\n            <h2>Create a new User</h2>\n            <form onSubmit={handleSubmit}>  \n                <label>User Name:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ name }\n                    onChange={(e) => setName(e.target.value)} \n                />\n                {Object.keys(nameErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{nameErr[key]}</div>\n                })}\n                \n                <label>Contact Number:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ contactNo }\n                    onChange={(e) => setContactNo(e.target.value)}\n                />\n                 {Object.keys(contactNoErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{contactNoErr[key]}</div>\n                })}\n\n                <label>Email ID:</label>\n                <input\n                    type=\"email\"\n                    required\n                    value={ emailId }\n                    onChange={(e) => setEmailId(e.target.value)}\n                />\n                {Object.keys(emailIdErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{emailIdErr[key]}</div>\n                })}\n\n                <label>Address:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ address }\n                    onChange={(e) => setAddress(e.target.value)}\n                />\n                {Object.keys(addressErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{addressErr[key]}</div>\n                })}\n\n                <h4>Education:</h4>\n                <label>University:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ university }\n                    onChange={(e) => setUniversity(e.target.value)}\n                />\n                {Object.keys(universityErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{universityErr[key]}</div>\n                })}\n\n                <label>Start Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ startYear }\n                    onChange={(e) => setStartYear(e.target.value)}\n                />\n                <label>End Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ endYear }\n                    onChange={(e) => setEndYear(e.target.value)}\n                />\n                <label>Degree:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ degree }\n                    onChange={(e) => setDegree(e.target.value)}\n                />\n                {Object.keys(degreeErr).map((key) => {\n                    return <div style={{color:\"red\"}}>{degreeErr[key]}</div>\n                })}\n\n                <h4>Experience:</h4>\n                <label>Institution:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ institution }\n                    onChange={(e) => setInstitution(e.target.value)}\n                />\n\n                <label>Start Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ workStartYear }\n                    onChange={(e) => setWorkStartYear(e.target.value)}\n                />\n\n                <label>End Year:</label>\n                <input\n                    type=\"date\"\n                    required\n                    value={ workEndYear }\n                    onChange={(e) => setWorkEndYear(e.target.value)}\n                />\n\n                <label>Title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={ title }\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n\n\n                \n\n                \n                { !isPending && <button>Create User</button> }\n                { isPending && <button disabled>Creating...</button> }\n                \n            </form>\n        </div>\n     );\n}\n \nexport default Create;"]},"metadata":{},"sourceType":"module"}