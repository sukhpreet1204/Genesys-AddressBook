{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/address-book/src/SplitPane.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport React, { createRef, useContext, useEffect, useRef, useState } from \"react\";\nimport QuoteContext from \"./QuoteContext\";\nimport SplitPaneContext from \"./SplitPaneContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SplitPane = ({\n  children,\n  ...props\n}) => {\n  _s();\n\n  const [clientHeight, setClientHeight] = useState(null);\n  const [clientWidth, setClientWidth] = useState(null);\n  const yDividerPos = useRef(null);\n  const xDividerPos = useRef(null);\n\n  const onMouseHoldDown = e => {\n    yDividerPos.current = e.clientY;\n    xDividerPos.current = e.clientX;\n  };\n\n  const onMouseHoldUp = () => {\n    yDividerPos.current = null;\n    xDividerPos.current = null;\n  };\n\n  const onMouseHoldMove = e => {\n    if (!yDividerPos.current && !xDividerPos.current) {\n      return;\n    }\n\n    setClientHeight(clientHeight + e.clientY - yDividerPos.current);\n    setClientWidth(clientWidth + e.clientX - xDividerPos.current);\n    yDividerPos.current = e.clientY;\n    xDividerPos.current = e.clientX;\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", onMouseHoldUp);\n    document.addEventListener(\"mousemove\", onMouseHoldMove);\n    return () => {\n      document.removeEventListener(\"mouseup\", onMouseHoldUp);\n      document.removeEventListener(\"mousemove\", onMouseHoldMove);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n    children: /*#__PURE__*/_jsxDEV(SplitPaneContext.Provider, {\n      value: {\n        clientHeight,\n        setClientHeight,\n        clientWidth,\n        setClientWidth,\n        onMouseHoldDown\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SplitPane, \"Ll8+XHtDis/O1IfQasQr5xZ71g0=\");\n\n_c = SplitPane;\nexport const Divider = props => {\n  _s2();\n\n  const {\n    onMouseHoldDown\n  } = useContext(SplitPaneContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n    onMouseDown: onMouseHoldDown\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(Divider, \"yJc4i0++hh1RuGob5liszs+l/fk=\");\n\n_c2 = Divider;\nexport const SplitPaneTop = props => {\n  _s3();\n\n  const topRef = /*#__PURE__*/createRef();\n  const {\n    clientHeight,\n    setClientHeight\n  } = useContext(SplitPaneContext);\n  const {\n    quotes,\n    setCurrQuote\n  } = useContext(QuoteContext);\n  useEffect(() => {\n    if (!clientHeight) {\n      setClientHeight(topRef.current.clientHeight);\n      return;\n    }\n\n    topRef.current.style.minHeight = clientHeight + \"px\";\n    topRef.current.style.maxHeight = clientHeight + \"px\";\n  }, [clientHeight]);\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n    className: \"split-pane-top\",\n    ref: topRef,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Famous quotes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quotes.map((el, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setCurrQuote(el.id),\n            children: el.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n};\n\n_s3(SplitPaneTop, \"f1tdt4NFbARQzTj/0gK4peJtwsI=\");\n\n_c3 = SplitPaneTop;\nexport const SplitPaneBottom = props => {\n  _s4();\n\n  const {\n    currQuote\n  } = useContext(QuoteContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n    className: \"split-pane-bottom\",\n    children: [\"Current \", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"quote id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), \": \", currQuote]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 7\n  }, this);\n};\n\n_s4(SplitPaneBottom, \"5oY4vSaeruWLxl2ZDp5TN6/Zh+w=\");\n\n_c4 = SplitPaneBottom;\nexport const SplitPaneLeft = props => {\n  _s5();\n\n  const topRef = /*#__PURE__*/createRef();\n  const {\n    clientWidth,\n    setClientWidth\n  } = useContext(SplitPaneContext);\n  useEffect(() => {\n    if (!clientWidth) {\n      setClientWidth(topRef.current.clientWidth / 2);\n      return;\n    }\n\n    topRef.current.style.minWidth = clientWidth + \"px\";\n    topRef.current.style.maxWidth = clientWidth + \"px\";\n  }, [clientWidth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n    className: \"split-pane-left\",\n    ref: topRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 12\n  }, this);\n};\n\n_s5(SplitPaneLeft, \"tHI7g7bAUt2Cf4fxAN4ODL2zKew=\");\n\n_c5 = SplitPaneLeft;\nexport const SplitPaneRight = props => {\n  _s6();\n\n  const {\n    quotes,\n    currQuote\n  } = useContext(QuoteContext);\n  const quote = quotes.find(el => el.id === currQuote);\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n    className: \"split-pane-right\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote\",\n      children: [/*#__PURE__*/_jsxDEV(\"blockquote\", {\n        children: quote.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), \"\\u2014\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: quote.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 7\n  }, this);\n};\n\n_s6(SplitPaneRight, \"CP5+ojzz7rfXyy5ia5pJ0pxD8Cs=\");\n\n_c6 = SplitPaneRight;\nexport default SplitPane;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SplitPane\");\n$RefreshReg$(_c2, \"Divider\");\n$RefreshReg$(_c3, \"SplitPaneTop\");\n$RefreshReg$(_c4, \"SplitPaneBottom\");\n$RefreshReg$(_c5, \"SplitPaneLeft\");\n$RefreshReg$(_c6, \"SplitPaneRight\");","map":{"version":3,"sources":["/Users/supreetsingh/address-book/src/SplitPane.js"],"names":["React","createRef","useContext","useEffect","useRef","useState","QuoteContext","SplitPaneContext","SplitPane","children","props","clientHeight","setClientHeight","clientWidth","setClientWidth","yDividerPos","xDividerPos","onMouseHoldDown","e","current","clientY","clientX","onMouseHoldUp","onMouseHoldMove","document","addEventListener","removeEventListener","Divider","SplitPaneTop","topRef","quotes","setCurrQuote","style","minHeight","maxHeight","map","el","i","id","author","SplitPaneBottom","currQuote","SplitPaneLeft","minWidth","maxWidth","SplitPaneRight","quote","find","description"],"mappings":"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","sourcesContent":["import React, {\n    createRef,\n    useContext,\n    useEffect,\n    useRef,\n    useState,\n  } from \"react\";\n  import QuoteContext from \"./QuoteContext\";\n  import SplitPaneContext from \"./SplitPaneContext\";\n  \n  const SplitPane = ({ children, ...props }) => {\n    const [clientHeight, setClientHeight] = useState(null);\n    const [clientWidth, setClientWidth] = useState(null);\n    const yDividerPos = useRef(null);\n    const xDividerPos = useRef(null);\n  \n    const onMouseHoldDown = (e) => {\n      yDividerPos.current = e.clientY;\n      xDividerPos.current = e.clientX;\n    };\n  \n    const onMouseHoldUp = () => {\n      yDividerPos.current = null;\n      xDividerPos.current = null;\n    };\n  \n    const onMouseHoldMove = (e) => {\n      if (!yDividerPos.current && !xDividerPos.current) {\n        return;\n      }\n  \n      setClientHeight(clientHeight + e.clientY - yDividerPos.current);\n      setClientWidth(clientWidth + e.clientX - xDividerPos.current);\n  \n      yDividerPos.current = e.clientY;\n      xDividerPos.current = e.clientX;\n    };\n  \n    useEffect(() => {\n      document.addEventListener(\"mouseup\", onMouseHoldUp);\n      document.addEventListener(\"mousemove\", onMouseHoldMove);\n  \n      return () => {\n        document.removeEventListener(\"mouseup\", onMouseHoldUp);\n        document.removeEventListener(\"mousemove\", onMouseHoldMove);\n      };\n    });\n  \n    return (\n      <div {...props}>\n        <SplitPaneContext.Provider\n          value={{\n            clientHeight,\n            setClientHeight,\n            clientWidth,\n            setClientWidth,\n            onMouseHoldDown,\n          }}\n        >\n          {children}\n        </SplitPaneContext.Provider>\n      </div>\n    );\n  };\n  \n  export const Divider = (props) => {\n    const { onMouseHoldDown } = useContext(SplitPaneContext);\n  \n    return <div {...props} onMouseDown={onMouseHoldDown} />;\n  };\n  \n  export const SplitPaneTop = (props) => {\n    const topRef = createRef();\n    const { clientHeight, setClientHeight } = useContext(SplitPaneContext);\n    const { quotes, setCurrQuote } = useContext(QuoteContext);\n  \n    useEffect(() => {\n      if (!clientHeight) {\n        setClientHeight(topRef.current.clientHeight);\n        return;\n      }\n  \n      topRef.current.style.minHeight = clientHeight + \"px\";\n      topRef.current.style.maxHeight = clientHeight + \"px\";\n    }, [clientHeight]);\n  \n    return (\n      <div {...props} className=\"split-pane-top\" ref={topRef}>\n        <h1>Famous quotes:</h1>\n        <ul>\n          {quotes.map((el, i) => {\n            return (\n              <li key={i}>\n                <a href=\"#\" onClick={() => setCurrQuote(el.id)}>\n                  {el.author}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  };\n  \n  export const SplitPaneBottom = (props) => {\n    const { currQuote } = useContext(QuoteContext);\n  \n    return (\n      <div {...props} className=\"split-pane-bottom\">\n        Current <b>quote id</b>: {currQuote}\n      </div>\n    );\n  };\n  \n  export const SplitPaneLeft = (props) => {\n    const topRef = createRef();\n    const { clientWidth, setClientWidth } = useContext(SplitPaneContext);\n  \n    useEffect(() => {\n      if (!clientWidth) {\n        setClientWidth(topRef.current.clientWidth / 2);\n        return;\n      }\n  \n      topRef.current.style.minWidth = clientWidth + \"px\";\n      topRef.current.style.maxWidth = clientWidth + \"px\";\n    }, [clientWidth]);\n  \n    return <div {...props} className=\"split-pane-left\" ref={topRef} />;\n  };\n  \n  export const SplitPaneRight = (props) => {\n    const { quotes, currQuote } = useContext(QuoteContext);\n    const quote = quotes.find((el) => el.id === currQuote);\n  \n    return (\n      <div {...props} className=\"split-pane-right\">\n        <div className=\"quote\">\n          <blockquote>{quote.description}</blockquote>—{\" \"}\n          <span>{quote.author}</span>\n        </div>\n      </div>\n    );\n  };\n  \n  export default SplitPane;"]},"metadata":{},"sourceType":"module"}