{"ast":null,"code":"var _jsxFileName = \"/Users/supreetsingh/Genesys-AddressBook/src/components/UserList/UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getRandomColor, createImageFromInitials } from \"../ProfilePicture/ProfilePicture\";\nimport \"../../components/UserList/userList.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserList = ({\n  people,\n  selectedUser\n}) => {\n  _s();\n\n  const [alphabetOrder, setAlphabetOrder] = useState({});\n  people.sort((a, b) => {\n    if (a.name > b.name) return 1;else {\n      return -1;\n    }\n  });\n  useEffect(() => {\n    let dataObj = {};\n    people.forEach(element => {\n      let tempElement = element;\n      tempElement[\"color\"] = getRandomColor();\n\n      if (dataObj[element.name[0]]) {\n        dataObj[element.name[0]].push(tempElement);\n      } else {\n        dataObj[element.name[0]] = [tempElement];\n      }\n    });\n    setAlphabetOrder(dataObj);\n  }, []);\n\n  const selectUserData = user => {\n    selectedUser(user);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list\",\n    children: Object.keys(alphabetOrder).map(alphabets => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: alphabets.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), alphabetOrder[alphabets].map(people => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => selectUserData(people),\n            className: \"user-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileImage\",\n              children: [createImageFromInitials(people.name, people.color), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"nameDisplay\",\n                children: people.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)\n          }, people.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserList, \"PgC0Dwnok4OCVhq6/59zg1f+QJU=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/supreetsingh/Genesys-AddressBook/src/components/UserList/UserList.js"],"names":["React","useEffect","useState","getRandomColor","createImageFromInitials","UserList","people","selectedUser","alphabetOrder","setAlphabetOrder","sort","a","b","name","dataObj","forEach","element","tempElement","push","selectUserData","user","Object","keys","map","alphabets","toUpperCase","color","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAwC,OAAxC;AACA,SAAQC,cAAR,EAAwBC,uBAAxB,QAAsD,kCAAtD;AACA,OAAO,yCAAP;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAA4B;AAAA;;AACzC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACAI,EAAAA,MAAM,CAACI,IAAP,CAAY,CAACC,CAAD,EAAGC,CAAH,KAAQ;AAChB,QAAGD,CAAC,CAACE,IAAF,GAAOD,CAAC,CAACC,IAAZ,EACA,OAAO,CAAP,CADA,KAEI;AACA,aAAO,CAAC,CAAR;AACH;AACJ,GAND;AAQAZ,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIa,OAAO,GAAG,EAAd;AACAR,IAAAA,MAAM,CAACS,OAAP,CAAeC,OAAO,IAAI;AACtB,UAAIC,WAAW,GAAGD,OAAlB;AACAC,MAAAA,WAAW,CAAC,OAAD,CAAX,GAAuBd,cAAc,EAArC;;AACA,UAAGW,OAAO,CAACE,OAAO,CAACH,IAAR,CAAa,CAAb,CAAD,CAAV,EAA4B;AACxBC,QAAAA,OAAO,CAACE,OAAO,CAACH,IAAR,CAAa,CAAb,CAAD,CAAP,CAAyBK,IAAzB,CAA8BD,WAA9B;AACH,OAFD,MAEM;AACFH,QAAAA,OAAO,CAACE,OAAO,CAACH,IAAR,CAAa,CAAb,CAAD,CAAP,GAA2B,CAACI,WAAD,CAA3B;AACH;AACJ,KARD;AASAR,IAAAA,gBAAgB,CAACK,OAAD,CAAhB;AACH,GAZQ,EAYP,EAZO,CAAT;;AAiBA,QAAMK,cAAc,GAAIC,IAAD,IAAU;AAC7Bb,IAAAA,YAAY,CAACa,IAAD,CAAZ;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKC,MAAM,CAACC,IAAP,CAAYd,aAAZ,EAA2Be,GAA3B,CAA+BC,SAAS,iBACrC;AAAA,6BACA;AAAA,gCACA;AAAA,oBAAUA,SAAS,CAACC,WAAV;AAAV;AAAA;AAAA;AAAA;AAAA,gBADA,EAECjB,aAAa,CAACgB,SAAD,CAAb,CAAyBD,GAAzB,CAA6BjB,MAAM,IAAG;AACnC,8BACA;AAAK,YAAA,OAAO,EAAE,MAAIa,cAAc,CAACb,MAAD,CAAhC;AAA0C,YAAA,SAAS,EAAC,cAApD;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,yBAA+BF,uBAAuB,CAACE,MAAM,CAACO,IAAR,EAAaP,MAAM,CAACoB,KAApB,CAAtD,eACA;AAAM,gBAAA,SAAS,EAAC,aAAhB;AAAA,0BAA+BpB,MAAM,CAACO;AAAtC;AAAA;AAAA;AAAA;AAAA,sBADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAwEP,MAAM,CAACqB,EAA/E;AAAA;AAAA;AAAA;AAAA,kBADA;AAME,SAPL,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAjDD;;GAAMtB,Q;;KAAAA,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState}from \"react\";\nimport {getRandomColor, createImageFromInitials} from \"../ProfilePicture/ProfilePicture\";\nimport \"../../components/UserList/userList.scss\";\n\nconst UserList = ({people, selectedUser}) => {\n    const [alphabetOrder, setAlphabetOrder] = useState({})\n    people.sort((a,b)=> {\n        if(a.name>b.name)\n        return 1;\n        else{\n            return -1;\n        }\n    })\n\n    useEffect(()=> {\n        let dataObj = {};\n        people.forEach(element => {\n            let tempElement = element;\n            tempElement[\"color\"] = getRandomColor();\n            if(dataObj[element.name[0]]){\n                dataObj[element.name[0]].push(tempElement)\n            }else {\n                dataObj[element.name[0]] = [tempElement]\n            }\n        });\n        setAlphabetOrder(dataObj)\n    },[])\n\n    \n    \n\n    const selectUserData = (user) => {\n        selectedUser(user)\n    }\n    return ( \n        <div className=\"user-list\">\n            {Object.keys(alphabetOrder).map(alphabets=> \n                <>\n                <details>\n                <summary>{alphabets.toUpperCase()}</summary>\n                {alphabetOrder[alphabets].map(people=> {\n                    return (\n                    <div onClick={()=>selectUserData(people)} className=\"user-preview\" key={people.id}>\n                        <div className=\"profileImage\">{createImageFromInitials(people.name,people.color)}\n                        <span className=\"nameDisplay\">{people.name}</span>\n                       </div>\n                    </div>\n                    )})\n                }</details>\n            </>   \n            )}\n        </div>\n     );\n}\n \nexport default UserList;"]},"metadata":{},"sourceType":"module"}